
# 111 PRINT

RAWCODE: win
ASM{
WinMain1,1682C:  RC = RD 	 % E1A0C00D
16830:  PUSH RD 000F 	 % E92D000F
16834:  PUSH RD 50F0 	 % E92D50F0
16838:  RD = RD - 24 	 % E24DD024
1683C:  R7 = R0 	 % E1A07000
16840:  R6 = R1 	 % E1A06001
16844:  R5 = R2 	 % E1A05002
16848:  R4 = R3 	 % E1A04003
1684C:  R0 = [16908] 	 % E59F00B4
16850:  R1 = [16904] 	 % E59F10AC
16854:  [R0+0] = R7 	 % E5807000
16858:  [R1+0] = R6 	 % E5816000
1685C:  R0 = [16900] 	 % E59F009C
16860:  R1 = [168FC] 	 % E59F1094
16864:  [R0+0] = R5 	 % E5805000
16868:  R0 = R7 	 % E1A00007
1686C:  [R1+0] = R4 	 % E5814000
16870:  R1 = R4 	 % E1A01004
16874:  16980 () 	 % EB000041
16878:  R0 ?= R0 ?- 0 	 % E3500000
1687C:  [RD+0] = R0 	 % E58D0000
16880: == R0 = 0 	 % 3A00000
16884: == RD = RD + 24 	 % 28DD024
16888: == RR#A0F0 = [RD+] 	 % 89DA0F0
1688C:  R3 = R4 	 % E1A03004
16890:  R2 = R5 	 % E1A02005
16894:  R1 = R6 	 % E1A01006
16898:  R0 = R7 	 % E1A00007
1689C:  forth_main () 	 % EB00296C
168A0:  R3 = 0 	 % E3A03000
168A4:  R2 = 0 	 % E3A02000
168A8:  R1 = 0 	 % E3A01000
168AC:  R0 = RD + 8 	 % E28D0008
168B0:  GetMessage () 	 % EB002DE2
168B4:  R0 ?= R0 ?- 0 	 % E3500000
168B8:  [RD+0] = R0 	 % E58D0000
168BC: == GOTO 168F0 	 % A00000B
168C0:  R0 = RD + 8 	 % E28D0008
168C4:  TranslateMessage () 	 % EB002DDA
168C8:  R0 = RD + 8 	 % E28D0008
168CC:  DispatchMessage () 	 % EB002DD5
168D0:  R3 = 0 	 % E3A03000
168D4:  R2 = 0 	 % E3A02000
168D8:  R1 = 0 	 % E3A01000
168DC:  R0 = RD + 8 	 % E28D0008
168E0:  GetMessage () 	 % EB002DD6
168E4:  R0 ?= R0 ?- 0 	 % E3500000
168E8:  [RD+0] = R0 	 % E58D0000
168EC: != GOTO 168C0 	 % 1AFFFFF3
168F0:  R0 = [RD+10] 	 % E59D0010
168F4:  RD = RD + 24 	 % E28DD024
168F8:  RR#A0F0 = [RD+] 	 % E89DA0F0
168FC: == R8 = R2 & R8 >> R7 	 % 28738
16900: == RB = R6 & R0 >> RD 	 % 6BD30
16904: == R3 = R7 & R0 >> RF 	 % 73F30
16908: == RC = R6 & R0 >>> 13 	 % 6C9E0

MyRegisterClass,1690C:  RC = RD 	 % E1A0C00D
16910:  PUSH RD 0003 	 % E92D0003
16914:  PUSH RD 5030 	 % E92D5030
16918:  RD = RD - 28 	 % E24DD028
1691C:  R2 = R0 	 % E1A02000
16920:  R4 = R1 	 % E1A04001
16924:  R0 = [1697C] 	 % E59F0050
16928:  R1 = 3 	 % E3A01003
1692C:  [RD+10] = R2 	 % E58D2010
16930:  R5 = 0 	 % E3A05000
16934:  [RD+0] = R1 	 % E58D1000
16938:  [RD+4] = R0 	 % E58D0004
1693C:  R1 = 65 	 % E3A01065
16940:  R0 = R2 	 % E1A00002
16944:  [RD+8] = R5 	 % E58D5008
16948:  [RD+C] = R5 	 % E58D500C
1694C:  LoadIcon () 	 % EB002DC4
16950:  [RD+14] = R0 	 % E58D0014
16954:  R0 = 0 	 % E3A00000
16958:  [RD+18] = R5 	 % E58D5018
1695C:  GetStockObject () 	 % EB002DBD
16960:  [RD+1C] = R0 	 % E58D001C
16964:  R0 = RD + 0 	 % E28D0000
16968:  [RD+20] = R5 	 % E58D5020
1696C:  [RD+24] = R4 	 % E58D4024
16970:  RegisterClass () 	 % EB002DB5
16974:  RD = RD + 28 	 % E28DD028
16978:  RR#A030 = [RD+] 	 % E89DA030
1697C: == R6 = R1 & R8 << RB 	 % 16B18

InitInstance,16980:  RC = RD 	 % E1A0C00D
16984:  PUSH RD 0003 	 % E92D0003
16988:  PUSH RD 53F0 	 % E92D53F0
1698C:  RD = RD - 6C0000 	 % E24DDE1B
16990:  R5 = R0 	 % E1A05000
16994:  R6 = R1 	 % E1A06001
16998:  R0 = [16B14] 	 % E59F0174
1699C:  R3 = 64 	 % E3A03064
169A0:  [R0+0] = R5 	 % E5805000
169A4:  R2 = RD + 20 	 % E28D2020
169A8:  R1 = 3 	 % E3A01003
169AC:  R0 = R5 	 % E1A00005
169B0:  LoadString () 	 % EB002DB7
169B4:  R1 = RD + 20 	 % E28D1020
169B8:  R0 = R5 	 % E1A00005
169BC:  1690C () 	 % EBFFFFD2
169C0:  R3 = 64 	 % E3A03064
169C4:  R2 = RD + E8 	 % E28D20E8
169C8:  R1 = 1 	 % E3A01001
169CC:  R0 = R5 	 % E1A00005
169D0:  LoadString () 	 % EB002DAF
169D4:  [RD+18] = R5 	 % E58D5018
169D8:  R0 = 1 	 % E3A00102
169DC:  R9 = 0 	 % E3A09000
169E0:  [RD+C] = R0 	 % E58D000C
169E4:  [RD+8] = R0 	 % E58D0008
169E8:  R3 = 40000000 	 % E3A03201
169EC:  [RD+4] = R0 	 % E58D0004
169F0:  R2 = RD + E8 	 % E28D20E8
169F4:  [RD+0] = R0 	 % E58D0000
169F8:  R1 = RD + 20 	 % E28D1020
169FC:  R0 = 0 	 % E3A00000
16A00:  [RD+1C] = R9 	 % E58D901C
16A04:  [RD+14] = R9 	 % E58D9014
16A08:  [RD+10] = R9 	 % E58D9010
16A0C:  CreateWindowEx () 	 % EB002D9D
16A10:  R4 ?= R0 	 % E1B04000
16A14:  R0 = [16B10] 	 % E59F00F4
16A18:  [R0+0] = R4 	 % E5804000
16A1C: == R0 = 0 	 % 3A00000
16A20: == RD = RD + 6C0000 	 % 28DDE1B
16A24: == RR#A3F0 = [RD+] 	 % 89DA3F0
16A28:  [RD+1C] = R9 	 % E58D901C
16A2C:  [RD+18] = R5 	 % E58D5018
16A30:  [RD+14] = R9 	 % E58D9014
16A34:  [RD+10] = R4 	 % E58D4010
16A38:  R0 = 82 	 % E3A00082
16A3C:  [RD+C] = R0 	 % E58D000C
16A40:  R1 = E6 	 % E3A010E6
16A44:  [RD+8] = R1 	 % E58D1008
16A48:  R7 = 32 	 % E3A07032
16A4C:  [RD+4] = R7 	 % E58D7004
16A50:  R8 = 5 	 % E3A08005
16A54:  [RD+0] = R8 	 % E58D8000
16A58:  R3 = [16B0C] 	 % E59F30AC
16A5C:  R2 = [16B08] 	 % E59F20A4
16A60:  R1 = [16B04] 	 % E59F109C
16A64:  R0 = 0 	 % E3A00000
16A68:  CreateWindowEx () 	 % EB002D86
16A6C:  R3 = [16B00] 	 % E59F308C
16A70:  [R3+0] = R0 	 % E5830000
16A74:  [RD+1C] = R9 	 % E58D901C
16A78:  [RD+18] = R5 	 % E58D5018
16A7C:  [RD+14] = R9 	 % E58D9014
16A80:  [RD+10] = R4 	 % E58D4010
16A84:  R0 = 14 	 % E3A00014
16A88:  [RD+C] = R0 	 % E58D000C
16A8C:  [RD+8] = R7 	 % E58D7008
16A90:  R0 = 19 	 % E3A00019
16A94:  [RD+4] = R0 	 % E58D0004
16A98:  [RD+0] = R8 	 % E58D8000
16A9C:  R3 = 40000001 	 % E3A03205
16AA0:  R3 = R3 | 10000000 	 % E3833502
16AA4:  R2 = [16AFC] 	 % E59F2050
16AA8:  R1 = [16AF8] 	 % E59F1048
16AAC:  R0 = 0 	 % E3A00000
16AB0:  CreateWindowEx () 	 % EB002D74
16AB4:  R3 = [16AF4] 	 % E59F3038
16AB8:  [R3+0] = R0 	 % E5830000
16ABC:  R1 = R6 	 % E1A01006
16AC0:  R0 = R4 	 % E1A00004
16AC4:  ShowWindow () 	 % EB002D6C
16AC8:  R0 = R4 	 % E1A00004
16ACC:  UpdateWindow () 	 % EB002D67
16AD0:  R3 = [16AF0] 	 % E59F3018
16AD4:  R0 = [R3+0] 	 % E5930000
16AD8:  R0 ?= R0 ?- 0 	 % E3500000
16ADC: != R1 = 1 	 % 13A01001
16AE0: != CommandBar_Show () 	 % 1B002D2F
16AE4:  R0 = 1 	 % E3A00001
16AE8:  RD = RD + 6C0000 	 % E28DDE1B
16AEC:  RR#A3F0 = [RD+] 	 % E89DA3F0
16AF0: &hwndCB 	 % 28708
16AF4: == RE ?= R3 & R0 << 1A 	 % 13ED00
16AF8: == R5 = R2 & R0 << 1A 	 % 25D00
16AFC: 25CF8 	 % 25CF8
16B00: == RC = R6 & R0 ->> B 	 % 6C5C0
16B04: == R5 = R2 & RC >>> 19 	 % 25CEC
16B08: == R8 = R2 & RC << E 	 % 2870C
16B0C: >=0 R1 ?= R0 +c+ R4 ->> 1 	 % 50B010C4
16B10: == R8 = R2 & RC >> R7 	 % 2873C
16B14: &hInst 	 % 28704

WndProc,16B18:  RC = RD 	 % E1A0C00D
16B1C:  PUSH RD 000F 	 % E92D000F
16B20:  PUSH RD 5010 	 % E92D5010
16B24:  R0 ?= R1 ?- 2 	 % E3510002
16B28: == GOTO 16B80 	 % A000014
16B2C:  R4 = 440000 	 % E3A04E11
16B30:  R4 = R4 | 1 	 % E3844001
16B34:  R0 ?= R1 ?- R4 	 % E1510004
16B38: != GOTO 16B78 	 % 1A00000E
16B3C:  R0 ?= R2 ?- 0 	 % E3520000
16B40: != GOTO 16B70 	 % 1A00000A
16B44:  R0 = [16B98] 	 % E59F004C
16B48:  R2 = 1F40000 	 % E3A02FFA
16B4C:  R3 = [16B94] 	 % E59F3040
16B50:  R1 = D 	 % E3A0100D
16B54:  R0 = [R0+0] 	 % E5900000
16B58:  SendMessage () 	 % EB002D56
16B5C:  R3 = [16B90] 	 % E59F302C
16B60:  R0 = 1 	 % E3A00001
16B64:  [R3+0] = R0 	 % E5830000
16B68:  R0 = 0 	 % E3A00000
16B6C:  RR#A010 = [RD+] 	 % E89DA010
16B70:  R1 = 440000 	 % E3A01E11
16B74:  R1 = R1 | 1 	 % E3811001
16B78:  RR#6010 = [RD+] 	 % E89D6010
16B7C:  GOTO DefWindowProc 	 % EA002D4A
16B80:  R0 = 0 	 % E3A00000
16B84:  PostQuitMessage () 	 % EB002D45
16B88:  R0 = 0 	 % E3A00000
16B8C:  RR#A010 = [RD+] 	 % E89DA010
16B90: == R8 = R2 & R8 << R7 	 % 28718
16B94: == RB = R6 & R0 >>> A 	 % 6B560
16B98: == RC = R6 & R0 ->> B 	 % 6C5C0

&hInst: RS 4
&hwndCB: RS 4
}
;RAWCODE

# 222 PRINT

: win1
 CALL WimMain1 0 ;

# 333 PRINT

win1

# 444 PRINT


