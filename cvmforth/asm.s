@ Generated by gcc 3.2.2 for StrongARM/WinCE/PE
	.file	"/pgcc/samp/cvm/asmwm.c"
	.global	out
	.bss
	.align	0
out:
	.space	8
	.global	globals
	.align	0
globals:
	.space	480
	.global	nl
	.align	0
nl:
	.space	4
	.global	dasm
	.data
	.align	0
dasm:
	.word	1
	.global	tabadr
	.bss
	.align	0
tabadr:
	.space	4
	.global	ftrace
	.align	0
ftrace:
	.space	4
	.text
	.align	0
	.global	_Z5matchjjj
_Z5matchjjj:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #16
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	ldr	r2, [fp, #-16]
	ldr	r3, [fp, #-24]
	and	r2, r2, r3
	str	r2, [fp, #-28]
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-24]
	and	r3, r2, r3
	ldr	r2, [fp, #-28]
	cmp	r2, r3
	movne	r3, #0
	moveq	r3, #1
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z3isdc
_Z3isdc:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	mov	r3, r0
	strb	r3, [fp, #-13]
	ldrb	r3, [fp, #-13]	@ zero_extendqisi2
	cmp	r3, #47
	bls	L3
	ldrb	r3, [fp, #-13]	@ zero_extendqisi2
	cmp	r3, #57
	bhi	L3
	mov	r3, #1
	str	r3, [fp, #-20]
	b	L2
L3:
	ldrb	r3, [fp, #-13]	@ zero_extendqisi2
	cmp	r3, #64
	bls	L4
	ldrb	r3, [fp, #-13]	@ zero_extendqisi2
	cmp	r3, #70
	bhi	L4
	mov	r3, #1
	str	r3, [fp, #-20]
	b	L2
L4:
	mov	r3, #0
	str	r3, [fp, #-20]
L2:
	ldr	r0, [fp, #-20]
	ldmea	fp, {fp, sp, pc}
	.section .rdata
	.align	0
LC0:
	.ascii	"PUSHR\000"
	.align	0
LC1:
	.ascii	"PUSHR,\000"
	.align	0
LC2:
	.ascii	"POPR\000"
	.align	0
LC3:
	.ascii	"POPR,\000"
	.align	0
LC4:
	.ascii	"R=R\000"
	.align	0
LC5:
	.ascii	"R=\000"
	.align	0
LC6:
	.ascii	"R=R+R\000"
	.align	0
LC7:
	.ascii	"R=R*R\000"
	.align	0
LC8:
	.ascii	"R=R|R\000"
	.align	0
LC9:
	.ascii	"R=R+\000"
	.align	0
LC10:
	.ascii	"R=R-\000"
	.align	0
LC11:
	.ascii	"R=R|\000"
	.align	0
LC12:
	.ascii	"R=R->~\000"
	.align	0
LC13:
	.ascii	"?=?-\000"
	.align	0
LC14:
	.ascii	"GOTO\000"
	.align	0
LC15:
	.ascii	"()\000"
	.align	0
LC16:
	.ascii	"R=[]\000"
	.align	0
LC17:
	.ascii	"[]=R\000"
	.align	0
LC18:
	.ascii	"R=[R+]\000"
	.align	0
LC19:
	.ascii	"[R+]=R\000"
	.align	0
LC20:
	.ascii	"[R+R<<]=R\000"
	.align	0
LC21:
	.ascii	"RR#?=[R+]\000"
	.align	0
LC22:
	.ascii	"RR#=[R+]\000"
	.align	0
LC23:
	.ascii	"[R+]?=RR#\000"
	.align	0
LC24:
	.ascii	"R=+$[R+R]\000"
	.align	0
LC25:
	.ascii	"+$[R+R]=R\000"
	.align	0
LC26:
	.ascii	"%X\000"
	.text
	.align	0
	.global	_Z9instrcodePciPjS_i
_Z9instrcodePciPjS_i:
	@ args = 4, pretend = 0, frame = 28
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #28
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r0, [fp, #-16]
	ldr	r1, L56
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	beq	L7
	ldr	r0, [fp, #-16]
	ldr	r1, L56+4
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L6
L7:
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #153092096
	str	r3, [fp, #-32]
	b	L8
L6:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+8
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	beq	L10
	ldr	r0, [fp, #-16]
	ldr	r1, L56+12
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L9
L10:
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #145752064
	str	r3, [fp, #-32]
	b	L8
L9:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+16
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L12
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #12
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #27262976
	str	r3, [fp, #-32]
	b	L8
L12:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+20
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L14
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #255
	bhi	L14
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #12
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #60817408
	str	r3, [fp, #-32]
	b	L8
L14:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+24
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #12
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #16
	orr	r1, r1, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #8388608
	str	r3, [fp, #-32]
	b	L8
L16:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+28
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L18
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #8
	orr	r1, r1, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #144
	str	r3, [fp, #-32]
	b	L8
L18:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+32
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L20
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #25165824
	str	r3, [fp, #-32]
	b	L8
L20:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+36
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L22
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #255
	bhi	L22
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #41943040
	str	r3, [fp, #-32]
	b	L8
L22:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+40
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L24
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #255
	bhi	L24
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #37748736
	str	r3, [fp, #-32]
	b	L8
L24:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+44
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L26
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #255
	bhi	L26
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #58720256
	str	r3, [fp, #-32]
	b	L8
L26:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+48
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L28
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #255
	bhi	L28
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #65011712
	str	r3, [fp, #-32]
	b	L8
L28:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+52
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L30
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #12
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #16
	orr	r1, r1, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #22020096
	str	r3, [fp, #-32]
	b	L8
L30:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+56
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L32
	ldr	r3, [fp, #-24]
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #4]
	rsb	r3, r3, r2
	sub	r3, r3, #8
	mov	r3, r3, lsr #2
	bic	r3, r3, #-16777216
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-36]
	orr	r3, r3, #167772160
	str	r3, [fp, #-32]
	b	L8
L32:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+60
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L34
	ldr	r3, [fp, #-24]
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #4]
	rsb	r3, r3, r2
	sub	r3, r3, #8
	mov	r3, r3, lsr #2
	bic	r3, r3, #-16777216
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-36]
	orr	r3, r3, #184549376
	str	r3, [fp, #-32]
	b	L8
L34:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+64
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L36
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #4]
	rsb	r3, r3, r2
	sub	r3, r3, #8
	mov	r3, r3, asl #20
	mov	r3, r3, lsr #20
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #12
	ldr	r3, [fp, #-36]
	orr	r3, r2, r3
	orr	r3, r3, #93323264
	orr	r3, r3, #983040
	str	r3, [fp, #-32]
	b	L8
L36:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+68
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L38
	ldr	r3, [fp, #-24]
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #4]
	rsb	r3, r3, r2
	sub	r3, r3, #8
	mov	r3, r3, asl #20
	mov	r3, r3, lsr #20
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #12
	ldr	r3, [fp, #-36]
	orr	r3, r2, r3
	orr	r3, r3, #92274688
	orr	r3, r3, #983040
	str	r3, [fp, #-32]
	b	L8
L38:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+72
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L40
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #93323264
	str	r3, [fp, #-32]
	b	L8
L40:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+76
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L42
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r1, r3
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #92274688
	str	r3, [fp, #-32]
	b	L8
L42:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+80
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L44
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #12
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r1, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #7
	orr	r1, r1, r3
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #125829120
	str	r3, [fp, #-32]
	b	L8
L44:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+84
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L46
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	orr	r3, r2, r3
	orr	r3, r3, #147849216
	str	r3, [fp, #-32]
	b	L8
L46:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+88
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L48
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	orr	r3, r2, r3
	orr	r3, r3, #143654912
	str	r3, [fp, #-32]
	b	L8
L48:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+92
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L50
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #146800640
	str	r3, [fp, #-32]
	b	L8
L50:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+96
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L52
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r2, r3, asl #16
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r2, r3
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #26214400
	orr	r3, r3, #208
	str	r3, [fp, #-32]
	b	L8
L52:
	ldr	r0, [fp, #-16]
	ldr	r1, L56+100
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L54
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #0]
	mov	r1, r3, asl #16
	mov	r2, #8
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	mov	r3, r3, asl #12
	orr	r1, r1, r3
	mov	r2, #4
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	orr	r3, r1, r3
	orr	r3, r3, #25165824
	orr	r3, r3, #208
	str	r3, [fp, #-32]
	b	L8
L54:
	sub	r3, fp, #32
	ldr	r0, [fp, #-28]
	ldr	r1, L56+104
	mov	r2, r3
	bl	sscanf
L8:
	ldr	r3, [fp, #-32]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
L57:
	.align	0
L56:
	.word	LC0
	.word	LC1
	.word	LC2
	.word	LC3
	.word	LC4
	.word	LC5
	.word	LC6
	.word	LC7
	.word	LC8
	.word	LC9
	.word	LC10
	.word	LC11
	.word	LC12
	.word	LC13
	.word	LC14
	.word	LC15
	.word	LC16
	.word	LC17
	.word	LC18
	.word	LC19
	.word	LC20
	.word	LC21
	.word	LC22
	.word	LC23
	.word	LC24
	.word	LC25
	.word	LC26
	.section .rdata
	.align	0
LC27:
	.ascii	"==\000"
	.align	0
LC28:
	.ascii	"!=\000"
	.align	0
LC29:
	.ascii	"c\000"
	.align	0
LC30:
	.ascii	"!c\000"
	.align	0
LC31:
	.ascii	"<0\000"
	.align	0
LC32:
	.ascii	">=0\000"
	.align	0
LC33:
	.ascii	"OVF\000"
	.align	0
LC34:
	.ascii	"!OVF\000"
	.align	0
LC35:
	.ascii	"HI\000"
	.align	0
LC36:
	.ascii	"LS\000"
	.align	0
LC37:
	.ascii	">=\000"
	.align	0
LC38:
	.ascii	"<\000"
	.align	0
LC39:
	.ascii	">\000"
	.align	0
LC40:
	.ascii	"<=\000"
	.align	0
LC41:
	.ascii	"\000"
	.align	0
LC42:
	.ascii	"UNC\000"
	.align	0
LC43:
	.word	LC27
	.word	LC28
	.word	LC29
	.word	LC30
	.word	LC31
	.word	LC32
	.word	LC33
	.word	LC34
	.word	LC35
	.word	LC36
	.word	LC37
	.word	LC38
	.word	LC39
	.word	LC40
	.word	LC41
	.word	LC42
	.align	0
LC44:
	.ascii	"BADC0DE\000"
	.align	0
LC45:
	.ascii	"RS\000"
	.text
	.align	0
	.global	_Z5asmblPci
_Z5asmblPci:
	@ args = 0, pretend = 0, frame = 320
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #324
	str	r0, [fp, #-20]
	str	r1, [fp, #-24]
	ldr	r3, L106
	sub	lr, fp, #132
	mov	ip, r3
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-48]
	mov	r3, #0
	str	r3, [fp, #-52]
	mov	r3, #0
	str	r3, [fp, #-36]
	mov	r3, #0
	str	r3, [fp, #-28]
	mov	r3, #0
	str	r3, [fp, #-32]
	mov	r3, #0
	str	r3, [fp, #-40]
L59:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-40]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L62
	b	L60
L62:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-40]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L63
	mov	r3, #1
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-40]
	add	r3, r3, #1
	str	r3, [fp, #-36]
L63:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-40]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L61
	mov	r3, #1
	str	r3, [fp, #-32]
L61:
	ldr	r3, [fp, #-40]
	add	r3, r3, #1
	str	r3, [fp, #-40]
	b	L59
L60:
	ldr	r3, [fp, #-32]
	cmp	r3, #0
	beq	L65
	ldr	r3, [fp, #-36]
	str	r3, [fp, #-40]
L66:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-40]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L68
	b	L67
L68:
	ldr	r3, [fp, #-40]
	add	r3, r3, #1
	str	r3, [fp, #-40]
	b	L66
L67:
	ldr	r3, [fp, #-40]
	add	r3, r3, #1
	str	r3, [fp, #-44]
L70:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	beq	L71
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L73
	b	L71
L73:
	sub	r1, fp, #24
	ldr	r3, [r1, #0]
	mov	r2, r3
	str	r2, [fp, #-68]
	add	r3, r3, #1
	str	r3, [r1, #0]
	ldr	r1, [fp, #-68]
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]
	strb	r3, [r1, #0]
	ldr	r3, [fp, #-44]
	add	r3, r3, #1
	str	r3, [fp, #-44]
	b	L70
L71:
	sub	r1, fp, #24
	ldr	r3, [r1, #0]
	mov	r2, r3
	str	r2, [fp, #-68]
	add	r3, r3, #1
	str	r3, [r1, #0]
	ldr	r2, [fp, #-68]
	mov	r3, #0
	strb	r3, [r2, #0]
L75:
	ldr	r3, [fp, #-24]
	and	r3, r3, #3
	cmp	r3, #0
	bne	L77
	b	L78
L77:
	sub	r1, fp, #24
	ldr	r3, [r1, #0]
	mov	r2, r3
	str	r2, [fp, #-68]
	add	r3, r3, #1
	str	r3, [r1, #0]
	ldr	r2, [fp, #-68]
	mov	r3, #0
	strb	r3, [r2, #0]
	b	L75
L65:
	mov	r3, #0
	str	r3, [fp, #-324]
	mov	r3, #0
	str	r3, [fp, #-208]
	mov	r3, #0
	str	r3, [fp, #-328]
	ldr	r3, [fp, #-36]
	str	r3, [fp, #-332]
L79:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L80
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L80
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L80
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #37
	bne	L82
	b	L80
L82:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #32
	beq	L81
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #9
	beq	L81
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	mov	r0, r3
	bl	_Z3isdc
	mov	r3, r0
	cmp	r3, #0
	beq	L85
	mov	r3, #0
	str	r3, [fp, #-336]
L86:
	ldr	r2, [fp, #-332]
	ldr	r3, [fp, #-336]
	add	r2, r2, r3
	ldr	r3, [fp, #-20]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	mov	r0, r3
	bl	_Z3isdc
	mov	r3, r0
	cmp	r3, #0
	bne	L89
	b	L87
L89:
	ldr	r2, [fp, #-324]
	ldr	r1, L106+4
	mov	r3, r2
	mov	r3, r3, asl #2
	add	r3, r3, r2
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-336]
	add	r3, r2, r3
	sub	r0, fp, #16
	add	r3, r3, r0
	add	r1, r3, r1
	ldr	r2, [fp, #-332]
	ldr	r3, [fp, #-336]
	add	r2, r2, r3
	ldr	r3, [fp, #-20]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]
	strb	r3, [r1, #0]
	ldr	r3, [fp, #-336]
	add	r3, r3, #1
	str	r3, [fp, #-336]
	b	L86
L87:
	ldr	r2, [fp, #-324]
	ldr	r1, L106+4
	mov	r3, r2
	mov	r3, r3, asl #2
	add	r3, r3, r2
	mov	r2, r3, asl #1
	ldr	r3, [fp, #-336]
	add	r3, r2, r3
	sub	r2, fp, #16
	add	r3, r3, r2
	add	r2, r3, r1
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, [fp, #-324]
	add	r3, r3, #1
	str	r3, [fp, #-324]
	ldr	r2, [fp, #-332]
	ldr	r3, [fp, #-336]
	add	r3, r2, r3
	sub	r3, r3, #1
	str	r3, [fp, #-332]
	b	L81
L85:
	sub	r1, fp, #208
	ldr	r0, [r1, #0]
	mov	r3, r0
	mvn	r2, #147
	sub	ip, fp, #16
	add	r3, r3, ip
	add	ip, r3, r2
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]
	strb	r3, [ip, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
L81:
	ldr	r3, [fp, #-332]
	add	r3, r3, #1
	str	r3, [fp, #-332]
	b	L79
L80:
	mvn	r2, #147
	ldr	r3, [fp, #-208]
	sub	r0, fp, #16
	add	r3, r0, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #37
	bne	L91
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-332]
	add	r3, r2, r3
	add	r3, r3, #1
	str	r3, [fp, #-64]
	b	L92
L91:
	ldr	r3, L106+8
	str	r3, [fp, #-64]
L92:
	mov	r3, #0
	str	r3, [fp, #-332]
L93:
	ldr	r2, [fp, #-332]
	ldr	r3, [fp, #-324]
	cmp	r2, r3
	blt	L96
	b	L94
L96:
	sub	r1, fp, #288
	ldr	r2, [fp, #-332]
	mov	r3, r2
	mov	r3, r3, asl #2
	add	r3, r3, r2
	mov	r3, r3, asl #1
	add	r2, r1, r3
	sub	r1, fp, #320
	ldr	r3, [fp, #-332]
	mov	r3, r3, asl #2
	add	r3, r1, r3
	mov	r0, r2
	ldr	r1, L106+12
	mov	r2, r3
	bl	sscanf
	ldr	r3, [fp, #-332]
	add	r3, r3, #1
	str	r3, [fp, #-332]
	b	L93
L94:
	sub	r3, fp, #164
	str	r3, [fp, #-204]
	sub	r3, fp, #196
	mov	r0, r3
	ldr	r1, L106+16
	bl	strcpy
	mov	r3, #14
	str	r3, [fp, #-200]
	mov	r3, #0
	str	r3, [fp, #-336]
L97:
	ldr	r3, [fp, #-336]
	cmp	r3, #13
	ble	L100
	b	L98
L100:
	ldr	r3, [fp, #-336]
	mvn	r2, #115
	mov	r3, r3, asl #2
	sub	r1, fp, #16
	add	r3, r3, r1
	add	r3, r3, r2
	ldr	r0, [r3, #0]
	bl	strlen
	mov	r2, r0
	sub	r1, fp, #164
	ldr	r3, [fp, #-336]
	mvn	r0, #115
	mov	r3, r3, asl #2
	sub	ip, fp, #16
	add	r3, r3, ip
	add	r3, r3, r0
	mov	r0, r1
	ldr	r1, [r3, #0]
	bl	strncmp
	mov	r3, r0
	cmp	r3, #0
	bne	L99
	sub	r2, fp, #196
	ldr	r3, [fp, #-336]
	mvn	r1, #115
	mov	r3, r3, asl #2
	sub	r0, fp, #16
	add	r3, r3, r0
	add	r3, r3, r1
	mov	r0, r2
	ldr	r1, [r3, #0]
	bl	strcpy
	ldr	r3, [fp, #-336]
	str	r3, [fp, #-200]
	sub	r4, fp, #164
	ldr	r3, [fp, #-336]
	mvn	r2, #115
	mov	r3, r3, asl #2
	sub	r1, fp, #16
	add	r3, r3, r1
	add	r3, r3, r2
	ldr	r0, [r3, #0]
	bl	strlen
	mov	r3, r0
	add	r3, r4, r3
	str	r3, [fp, #-204]
L99:
	ldr	r3, [fp, #-336]
	add	r3, r3, #1
	str	r3, [fp, #-336]
	b	L97
L98:
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-68]
	ldr	r3, [fp, #-204]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L102
	sub	r3, fp, #288
	sub	r2, fp, #56
	mov	r0, r3
	ldr	r1, L106+12
	bl	sscanf
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-56]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-24]
	add	r3, r3, #4
	str	r3, [fp, #-24]
	b	L103
L102:
	ldr	r0, [fp, #-204]
	ldr	r1, L106+20
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L104
	ldr	r3, [fp, #-24]
	ldr	r2, [fp, #-320]
	add	r3, r3, r2
	str	r3, [fp, #-24]
	b	L103
L104:
	sub	r2, fp, #320
	ldr	r3, [fp, #-24]
	str	r3, [sp, #0]
	ldr	r0, [fp, #-204]
	ldr	r1, [fp, #-324]
	ldr	r3, [fp, #-64]
	bl	_Z9instrcodePciPjS_i
	mov	r2, r0
	ldr	r3, [fp, #-200]
	mov	r3, r3, asl #28
	orr	r3, r2, r3
	str	r3, [fp, #-56]
	ldr	r2, [fp, #-68]
	ldr	r3, [fp, #-56]
	str	r3, [r2, #0]
	ldr	r3, [fp, #-24]
	add	r3, r3, #4
	str	r3, [fp, #-24]
L103:
	sub	r3, fp, #60
	ldr	r0, [fp, #-64]
	ldr	r1, L106+12
	mov	r2, r3
	bl	sscanf
L78:
	ldr	r3, [fp, #-24]
	mov	r0, r3
	ldmea	fp, {r4, fp, sp, pc}
L107:
	.align	0
L106:
	.word	LC43
	.word	-272
	.word	LC44
	.word	LC26
	.word	LC41
	.word	LC45
	.align	0
	.global	_Z7codeasmPci
_Z7codeasmPci:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #72
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	sub	r3, fp, #84
	ldr	r0, [fp, #-16]
	mov	r1, r3
	bl	_Z5asmblPci
	ldr	r3, [fp, #-84]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.global	str
	.bss
str:
	.space	1000
	.section .rdata
	.align	0
LC46:
	.ascii	"lastword=%X freespace=%X out.f=%X out.p=%X \000"
	.align	0
LC47:
	.ascii	"substlabels <%s> nl=%d\n\000"
	.align	0
LC48:
	.ascii	"pos %d %d label %d <%s>=%X\n\000"
	.text
	.align	0
	.global	_Z11substlabelsPcS_
_Z11substlabelsPcS_:
	@ args = 0, pretend = 0, frame = 28
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #40
	str	r0, [fp, #-20]
	str	r1, [fp, #-24]
	mov	r3, #0
	str	r3, [fp, #-28]
	mov	r3, #0
	str	r3, [fp, #-32]
	ldr	r2, L126
	ldr	ip, L126+4
	ldr	lr, L126+4
	ldr	r3, L126+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L126+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L126+12
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L126
	ldr	ip, L126+16
	ldr	r0, [r3, #0]
	ldr	r1, L126+20
	ldr	r2, [fp, #-20]
	ldr	r3, [ip, #0]
	bl	fprintf
	ldr	r3, L126
	ldr	r0, [r3, #0]
	bl	fflush
L110:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L113
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-32]
	add	r2, r2, r3
	mov	r3, #0
	strb	r3, [r2, #0]
	b	L109
L113:
	mov	r3, #0
	str	r3, [fp, #-40]
	mov	r3, #0
	str	r3, [fp, #-36]
L114:
	ldr	r3, L126+16
	ldr	r2, [fp, #-36]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L117
	b	L115
L117:
	ldr	r2, [fp, #-36]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L126+24
	add	r3, r2, r3
	mov	r0, r3
	bl	strlen
	mov	ip, r0
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r1, r2, r3
	ldr	r2, [fp, #-36]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L126+24
	add	r3, r2, r3
	mov	r0, r1
	mov	r1, r3
	mov	r2, ip
	bl	strncmp
	mov	r3, r0
	cmp	r3, #0
	bne	L116
	mov	r3, #1
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-36]
	str	r3, [sp, #0]
	ldr	r2, [fp, #-36]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L126+24
	add	r3, r3, r2
	str	r3, [sp, #4]
	ldr	r2, L126+24
	ldr	r1, [fp, #-36]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r3, r3, r0
	ldr	r3, [r3, #0]
	str	r3, [sp, #8]
	ldr	r0, L126+28
	ldr	r1, L126+32
	ldr	r2, [fp, #-28]
	ldr	r3, [fp, #-32]
	bl	sprintf
	ldr	r2, [fp, #-36]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L126+24
	add	r3, r2, r3
	mov	r0, r3
	bl	strlen
	mov	r2, r0
	ldr	r3, [fp, #-28]
	add	r3, r3, r2
	str	r3, [fp, #-28]
	mov	r3, #0
	str	r3, [fp, #-44]
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #43
	bne	L119
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	add	r3, r3, #1
	sub	r2, fp, #44
	mov	r0, r3
	ldr	r1, L126+36
	bl	sscanf
	ldr	r3, [fp, #-28]
	add	r3, r3, #1
	str	r3, [fp, #-28]
L120:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #47
	bls	L123
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #57
	bls	L122
L123:
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #64
	bls	L119
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	add	r3, r2, r3
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #70
	bls	L122
	b	L119
L122:
	ldr	r3, [fp, #-28]
	add	r3, r3, #1
	str	r3, [fp, #-28]
	b	L120
L119:
	ldr	r2, [fp, #-24]
	ldr	r3, [fp, #-32]
	add	r1, r2, r3
	ldr	r2, L126+24
	ldr	r0, [fp, #-36]
	mov	ip, #32
	mov	r3, r0
	mov	r3, r3, asl #3
	add	r3, r3, r0
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r3, r3, ip
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #-44]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L126+36
	mov	r2, r3
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-32]
	add	r3, r3, r2
	str	r3, [fp, #-32]
	b	L115
L116:
	ldr	r3, [fp, #-36]
	add	r3, r3, #1
	str	r3, [fp, #-36]
	b	L114
L115:
	ldr	r3, [fp, #-40]
	cmp	r3, #0
	bne	L110
	sub	r0, fp, #32
	ldr	ip, [r0, #0]
	mov	r3, ip
	mov	r2, r3
	ldr	r3, [fp, #-24]
	add	lr, r2, r3
	sub	r4, fp, #28
	ldr	r2, [r4, #0]
	mov	r3, r2
	mov	r1, r3
	ldr	r3, [fp, #-20]
	add	r3, r1, r3
	ldrb	r3, [r3, #0]
	strb	r3, [lr, #0]
	add	r2, r2, #1
	str	r2, [r4, #0]
	add	ip, ip, #1
	str	ip, [r0, #0]
	b	L110
L109:
	ldmea	fp, {r4, fp, sp, pc}
L127:
	.align	0
L126:
	.word	ftrace
	.word	globals
	.word	out
	.word	LC46
	.word	nl
	.word	LC47
	.word	labels
	.word	str
	.word	LC48
	.word	LC26
	.global	out1
	.bss
	.align	0
out1:
	.space	4
	.global	exename
	.data
	.align	0
exename:
	.ascii	"P\000r\000o\000g\000r\000a\000m\000N\000a\000m\000e"
	.ascii	"\000\000\000"
	.global	exenamea
	.align	0
exenamea:
	.ascii	"ProgramName\000"
	.global	adr
	.bss
	.align	0
adr:
	.space	4
	.global	code
	.align	0
code:
	.space	4
	.text
	.align	0
	.global	_Z8callcodePv
_Z8callcodePv:
	@ args = 0, pretend = 0, frame = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #12
	str	r0, [fp, #-16]
	ldr	r3, L129
	ldr	r3, [r3, #0]
	str	r3, [fp, #-24]
	ldr	r3, [fp, #-24]
	ldr	r0, [fp, #-16]
	mov	lr, pc
	mov	pc, r3
	mov	r3, r0
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-20]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
L130:
	.align	0
L129:
	.word	code
	.align	0
	.global	_Z5initfv
_Z5initfv:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldmea	fp, {fp, sp, pc}
	.section .rdata
	.align	0
LC49:
	.ascii	"Debut\n\000"
	.align	0
LC50:
	.ascii	"Nom executable: <\000"
	.align	0
LC51:
	.ascii	"%c\000"
	.align	0
LC52:
	.ascii	">\n\000"
	.align	0
LC53:
	.ascii	"exenamea=<%s>\n\000"
	.align	0
LC54:
	.ascii	"%s.asm.txt\000"
	.align	0
LC55:
	.ascii	"r\000"
	.align	0
LC56:
	.ascii	"Erreur ouverture <%s>\n\000"
	.align	0
LC57:
	.ascii	"Fichier ouvert\n\000"
	.align	0
LC58:
	.ascii	"<k=%d>\000"
	.align	0
LC59:
	.ascii	"%s=%X\n\000"
	.align	0
LC60:
	.ascii	"Erreur 2eme ouverture <%s>\n\000"
	.align	0
LC61:
	.ascii	"%X: %08X\n\000"
	.align	0
LC62:
	.ascii	"appel code...\n\000"
	.align	0
LC63:
	.ascii	"resultat=%X\n\000"
	.text
	.align	0
	.global	_Z7loadasmPv
_Z7loadasmPv:
	@ args = 0, pretend = 0, frame = 808
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #808
	str	r0, [fp, #-16]
	mov	r3, #0
	str	r3, [fp, #-684]
	bl	_Z5initfv
	ldr	r2, L188
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+4
	bl	fprintf
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+8
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-664]
L133:
	ldr	r2, L188+12
	ldr	r3, [fp, #-664]
	mov	r3, r3, asl #1
	add	r3, r3, r2
	ldrh	r3, [r3, #0]
	cmp	r3, #0
	bne	L136
	b	L134
L136:
	ldr	r2, L188
	ldr	r1, L188+12
	ldr	r3, [fp, #-664]
	mov	r3, r3, asl #1
	add	r3, r3, r1
	ldrh	r3, [r3, #0]
	ldr	r0, [r2, #0]
	ldr	r1, L188+16
	mov	r2, r3
	bl	fprintf
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L133
L134:
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+20
	ldr	r2, L188+12
	bl	fprintf
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+24
	ldr	r2, L188+28
	bl	fprintf
	sub	r3, fp, #808
	mov	r0, r3
	ldr	r1, L188+32
	ldr	r2, L188+28
	bl	sprintf
	sub	r3, fp, #808
	str	r3, [fp, #-680]
	ldr	r0, [fp, #-680]
	ldr	r1, L188+36
	bl	fopen
	mov	r3, r0
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-20]
	cmp	r3, #0
	bne	L137
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+40
	ldr	r2, [fp, #-680]
	bl	fprintf
	mov	r1, #0
	str	r1, [fp, #-820]
	b	L132
L137:
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+44
	bl	fprintf
	ldr	r2, L188+48
	ldr	r3, L188+52
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
L138:
	sub	r3, fp, #320
	mov	r0, r3
	mov	r1, #300
	ldr	r2, [fp, #-20]
	bl	fgets
	ldr	r0, [fp, #-20]
	bl	feof
	mov	r3, r0
	cmp	r3, #0
	beq	L141
	b	L139
L141:
	ldr	r3, L188+56
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L138
	ldr	r3, L188+56
	sub	ip, fp, #12
	ldrb	r3, [ip, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L138
	ldr	r3, L188+56
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L138
	ldr	r3, L188+56
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #37
	beq	L138
	mov	r3, #0
	str	r3, [fp, #-656]
	mov	r3, #0
	str	r3, [fp, #-660]
	mov	r3, #0
	str	r3, [fp, #-664]
L143:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L146
	b	L144
L146:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L147
	mov	r3, #1
	str	r3, [fp, #-656]
L147:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L145
	mov	r3, #1
	str	r3, [fp, #-660]
L145:
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L143
L144:
	ldr	r3, [fp, #-656]
	cmp	r3, #0
	beq	L149
	mov	r3, #0
	str	r3, [fp, #-668]
	mov	r3, #0
	str	r3, [fp, #-664]
L150:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L153
	b	L151
L153:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #44
	bne	L154
	ldr	r2, L188+60
	ldr	r3, [fp, #-668]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L188+64
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L188+68
	add	r3, r2, r3
	sub	r2, fp, #652
	mov	r0, r3
	mov	r1, r2
	mov	r2, #32
	bl	strncpy
	ldr	r2, L188+68
	ldr	r3, L188+64
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L188+48
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L188+64
	ldr	r3, L188+64
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
	mov	r3, #0
	str	r3, [fp, #-668]
	b	L152
L154:
	sub	r1, fp, #668
	ldr	r0, [r1, #0]
	mov	r3, r0
	ldr	r2, L188+60
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	ldr	ip, L188+56
	ldr	r3, [fp, #-664]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, ip
	ldrb	r3, [r3, #0]
	strb	r3, [r2, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
L152:
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L150
L151:
	ldr	r2, L188+60
	ldr	r3, [fp, #-668]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L188+60
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L149
	ldr	r3, L188+64
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L188+68
	add	r3, r2, r3
	sub	r2, fp, #652
	mov	r0, r3
	mov	r1, r2
	mov	r2, #32
	bl	strncpy
	ldr	r2, L188+68
	ldr	r3, L188+64
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L188+48
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L188+64
	ldr	r3, L188+64
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
L149:
	ldr	r3, [fp, #-660]
	cmp	r3, #0
	bne	L157
	mov	r3, #0
	str	r3, [fp, #-812]
	mov	r3, #0
	str	r3, [fp, #-664]
L158:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L161
	b	L159
L161:
	sub	r2, fp, #320
	ldr	r3, [fp, #-664]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L188+72
	mov	r2, #2
	bl	strncmp
	mov	r3, r0
	cmp	r3, #0
	bne	L160
	mov	r3, #1
	str	r3, [fp, #-812]
	sub	r2, fp, #320
	ldr	r3, [fp, #-664]
	add	r3, r2, r3
	add	r3, r3, #2
	sub	r2, fp, #816
	mov	r0, r3
	ldr	r1, L188+76
	bl	sscanf
	ldr	r1, L188+48
	ldr	r0, L188+48
	ldr	r3, [fp, #-816]
	add	r2, r3, #3
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
	b	L159
L160:
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L158
L159:
	ldr	r3, [fp, #-812]
	cmp	r3, #0
	bne	L138
	ldr	r2, L188+48
	ldr	r3, L188+48
	ldr	r3, [r3, #0]
	add	r3, r3, #4
	str	r3, [r2, #0]
	b	L138
L157:
	mov	r3, #0
	str	r3, [fp, #-664]
L165:
	ldr	r2, L188+56
	ldr	r3, [fp, #-664]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L167
	b	L166
L167:
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L165
L166:
	mov	r3, #0
	str	r3, [fp, #-668]
L169:
	ldr	r1, L188+80
	ldr	r2, [fp, #-664]
	ldr	r3, [fp, #-668]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	beq	L170
	ldr	r1, L188+80
	ldr	r2, [fp, #-664]
	ldr	r3, [fp, #-668]
	add	r3, r2, r3
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L170
	ldr	r1, L188+80
	ldr	r2, [fp, #-664]
	ldr	r3, [fp, #-668]
	add	r3, r2, r3
	sub	lr, fp, #12
	add	r3, r3, lr
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L170
	ldr	r1, L188+80
	ldr	r2, [fp, #-664]
	ldr	r3, [fp, #-668]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #13
	bne	L171
	b	L170
L171:
	ldr	r3, [fp, #-668]
	add	r3, r3, #1
	str	r3, [fp, #-668]
	b	L169
L170:
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+84
	ldr	r2, [fp, #-668]
	bl	fprintf
	ldr	r1, L188+48
	ldr	r0, L188+48
	ldr	r3, [fp, #-668]
	add	r2, r3, #4
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
	b	L138
L139:
	ldr	r0, [fp, #-20]
	bl	fclose
	mov	r3, #0
	str	r3, [fp, #-664]
L174:
	ldr	r3, L188+64
	ldr	r2, [fp, #-664]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L177
	b	L175
L177:
	ldr	r1, L188
	ldr	r2, [fp, #-664]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L188+68
	add	r2, r2, r3
	ldr	r0, L188+68
	ldr	ip, [fp, #-664]
	mov	lr, #32
	mov	r3, ip
	mov	r3, r3, asl #3
	add	r3, r3, ip
	mov	r3, r3, asl #2
	add	r3, r3, r0
	add	r3, r3, lr
	ldr	r0, [r1, #0]
	ldr	r1, L188+88
	ldr	r3, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L174
L175:
	ldr	r0, [fp, #-680]
	ldr	r1, L188+36
	bl	fopen
	mov	r3, r0
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-20]
	cmp	r3, #0
	bne	L178
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+92
	ldr	r2, [fp, #-680]
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-820]
	b	L132
L178:
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+44
	bl	fprintf
	ldr	r2, L188+48
	ldr	r3, L188+52
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
L179:
	sub	r3, fp, #320
	mov	r0, r3
	mov	r1, #300
	ldr	r2, [fp, #-20]
	bl	fgets
	ldr	r0, [fp, #-20]
	bl	feof
	mov	r3, r0
	cmp	r3, #0
	beq	L182
	b	L180
L182:
	sub	r3, fp, #320
	mov	r0, r3
	bl	strlen
	mov	r3, r0
	sub	r3, r3, #1
	ldr	r2, L188+56
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L188+56
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L179
	ldr	r3, L188+56
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L179
	ldr	r3, L188+56
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L179
	sub	r3, fp, #320
	sub	r2, fp, #620
	mov	r0, r3
	mov	r1, r2
	bl	_Z11substlabelsPcS_
	sub	r3, fp, #620
	ldr	r2, L188+48
	mov	r0, r3
	ldr	r1, [r2, #0]
	bl	_Z5asmblPci
	mov	r2, r0
	ldr	r3, L188+48
	str	r2, [r3, #0]
	b	L179
L180:
	mov	r3, #0
	str	r3, [fp, #-664]
L184:
	ldr	r2, [fp, #-664]
	ldr	r3, [fp, #-684]
	cmp	r2, r3
	ble	L187
	b	L185
L187:
	ldr	r1, L188
	ldr	r0, L188+52
	ldr	r3, [fp, #-664]
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-664]
	mov	r0, r3, asl #2
	ldr	r3, L188+52
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldr	r0, [r1, #0]
	ldr	r1, L188+96
	ldr	r3, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-664]
	add	r3, r3, #1
	str	r3, [fp, #-664]
	b	L184
L185:
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+100
	bl	fprintf
	ldr	r0, [fp, #-16]
	bl	_Z8callcodePv
	mov	r3, r0
	str	r3, [fp, #-676]
	ldr	r3, L188
	ldr	r0, [r3, #0]
	ldr	r1, L188+104
	ldr	r2, [fp, #-676]
	bl	fprintf
	ldr	r3, L188
	ldr	r0, [r3, #0]
	bl	fclose
L132:
	ldr	r0, [fp, #-820]
	ldmea	fp, {fp, sp, pc}
L189:
	.align	0
L188:
	.word	out1
	.word	LC49
	.word	LC50
	.word	exename
	.word	LC51
	.word	LC52
	.word	LC53
	.word	exenamea
	.word	LC54
	.word	LC55
	.word	LC56
	.word	LC57
	.word	adr
	.word	code
	.word	-308
	.word	-640
	.word	nl
	.word	labels
	.word	LC45
	.word	LC26
	.word	-307
	.word	LC58
	.word	LC59
	.word	LC60
	.word	LC61
	.word	LC62
	.word	LC63
	.section .rdata
	.align	0
LC64:
	.ascii	"outasm.txt\000"
	.align	0
LC65:
	.ascii	"w\000"
	.text
	.align	0
	.global	_Z8loadasm1PiPc
_Z8loadasm1PiPc:
	@ args = 0, pretend = 0, frame = 812
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #812
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r0, L246
	ldr	r1, L246+4
	bl	fopen
	mov	r3, r0
	str	r3, [fp, #-24]
	mov	r3, #0
	str	r3, [fp, #-688]
	ldr	r2, L246+8
	ldr	r3, [fp, #-24]
	str	r3, [r2, #0]
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+12
	bl	fprintf
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+16
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-672]
L191:
	ldr	r2, L246+20
	ldr	r3, [fp, #-672]
	mov	r3, r3, asl #1
	add	r3, r3, r2
	ldrh	r3, [r3, #0]
	cmp	r3, #0
	bne	L194
	b	L192
L194:
	ldr	r2, L246+8
	ldr	r1, L246+20
	ldr	r3, [fp, #-672]
	mov	r3, r3, asl #1
	add	r3, r3, r1
	ldrh	r3, [r3, #0]
	ldr	r0, [r2, #0]
	ldr	r1, L246+24
	mov	r2, r3
	bl	fprintf
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L191
L192:
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+28
	ldr	r2, L246+20
	bl	fprintf
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+32
	ldr	r2, L246+36
	bl	fprintf
	ldr	r0, [fp, #-20]
	ldr	r1, L246+40
	bl	fopen
	mov	r3, r0
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	bne	L195
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+44
	ldr	r2, [fp, #-20]
	bl	fprintf
	mov	r1, #0
	str	r1, [fp, #-824]
	b	L190
L195:
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+48
	bl	fprintf
	ldr	r2, L246+52
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
L196:
	sub	r3, fp, #328
	mov	r0, r3
	mov	r1, #300
	ldr	r2, [fp, #-28]
	bl	fgets
	ldr	r0, [fp, #-28]
	bl	feof
	mov	r3, r0
	cmp	r3, #0
	beq	L199
	b	L197
L199:
	ldr	r3, L246+56
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L196
	ldr	r3, L246+56
	sub	ip, fp, #12
	ldrb	r3, [ip, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L196
	ldr	r3, L246+56
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L196
	ldr	r3, L246+56
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #37
	beq	L196
	mov	r3, #0
	str	r3, [fp, #-664]
	mov	r3, #0
	str	r3, [fp, #-668]
	mov	r3, #0
	str	r3, [fp, #-672]
L201:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L204
	b	L202
L204:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L205
	mov	r3, #1
	str	r3, [fp, #-664]
L205:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L203
	mov	r3, #1
	str	r3, [fp, #-668]
L203:
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L201
L202:
	ldr	r3, [fp, #-664]
	cmp	r3, #0
	beq	L207
	mov	r3, #0
	str	r3, [fp, #-676]
	mov	r3, #0
	str	r3, [fp, #-672]
L208:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L211
	b	L209
L211:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #44
	bne	L212
	ldr	r2, L246+60
	ldr	r3, [fp, #-676]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L246+64
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L246+68
	add	r3, r2, r3
	sub	r2, fp, #660
	mov	r0, r3
	mov	r1, r2
	mov	r2, #32
	bl	strncpy
	ldr	r2, L246+68
	ldr	r3, L246+64
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L246+52
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L246+64
	ldr	r3, L246+64
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
	mov	r3, #0
	str	r3, [fp, #-676]
	b	L210
L212:
	sub	r1, fp, #676
	ldr	r0, [r1, #0]
	mov	r3, r0
	ldr	r2, L246+60
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	ldr	ip, L246+56
	ldr	r3, [fp, #-672]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, ip
	ldrb	r3, [r3, #0]
	strb	r3, [r2, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
L210:
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L208
L209:
	ldr	r2, L246+60
	ldr	r3, [fp, #-676]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L246+60
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L207
	ldr	r3, L246+64
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L246+68
	add	r3, r2, r3
	sub	r2, fp, #660
	mov	r0, r3
	mov	r1, r2
	mov	r2, #32
	bl	strncpy
	ldr	r2, L246+68
	ldr	r3, L246+64
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L246+52
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L246+64
	ldr	r3, L246+64
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
L207:
	ldr	r3, [fp, #-668]
	cmp	r3, #0
	bne	L215
	mov	r3, #0
	str	r3, [fp, #-816]
	mov	r3, #0
	str	r3, [fp, #-672]
L216:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L219
	b	L217
L219:
	sub	r2, fp, #328
	ldr	r3, [fp, #-672]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L246+72
	mov	r2, #2
	bl	strncmp
	mov	r3, r0
	cmp	r3, #0
	bne	L218
	mov	r3, #1
	str	r3, [fp, #-816]
	sub	r2, fp, #328
	ldr	r3, [fp, #-672]
	add	r3, r2, r3
	add	r3, r3, #2
	sub	r2, fp, #820
	mov	r0, r3
	ldr	r1, L246+76
	bl	sscanf
	ldr	r1, L246+52
	ldr	r0, L246+52
	ldr	r3, [fp, #-820]
	add	r2, r3, #3
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
	b	L217
L218:
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L216
L217:
	ldr	r3, [fp, #-816]
	cmp	r3, #0
	bne	L196
	ldr	r2, L246+52
	ldr	r3, L246+52
	ldr	r3, [r3, #0]
	add	r3, r3, #4
	str	r3, [r2, #0]
	b	L196
L215:
	mov	r3, #0
	str	r3, [fp, #-672]
L223:
	ldr	r2, L246+56
	ldr	r3, [fp, #-672]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L225
	b	L224
L225:
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L223
L224:
	mov	r3, #0
	str	r3, [fp, #-676]
L227:
	ldr	r1, L246+80
	ldr	r2, [fp, #-672]
	ldr	r3, [fp, #-676]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	beq	L228
	ldr	r1, L246+80
	ldr	r2, [fp, #-672]
	ldr	r3, [fp, #-676]
	add	r3, r2, r3
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L228
	ldr	r1, L246+80
	ldr	r2, [fp, #-672]
	ldr	r3, [fp, #-676]
	add	r3, r2, r3
	sub	lr, fp, #12
	add	r3, r3, lr
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L228
	ldr	r1, L246+80
	ldr	r2, [fp, #-672]
	ldr	r3, [fp, #-676]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #13
	bne	L229
	b	L228
L229:
	ldr	r3, [fp, #-676]
	add	r3, r3, #1
	str	r3, [fp, #-676]
	b	L227
L228:
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+84
	ldr	r2, [fp, #-676]
	bl	fprintf
	ldr	r1, L246+52
	ldr	r0, L246+52
	ldr	r3, [fp, #-676]
	add	r2, r3, #4
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
	b	L196
L197:
	ldr	r0, [fp, #-28]
	bl	fclose
	mov	r3, #0
	str	r3, [fp, #-672]
L232:
	ldr	r3, L246+64
	ldr	r2, [fp, #-672]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L235
	b	L233
L235:
	ldr	r1, L246+8
	ldr	r2, [fp, #-672]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L246+68
	add	r2, r2, r3
	ldr	r0, L246+68
	ldr	ip, [fp, #-672]
	mov	lr, #32
	mov	r3, ip
	mov	r3, r3, asl #3
	add	r3, r3, ip
	mov	r3, r3, asl #2
	add	r3, r3, r0
	add	r3, r3, lr
	ldr	r0, [r1, #0]
	ldr	r1, L246+88
	ldr	r3, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L232
L233:
	ldr	r0, [fp, #-20]
	ldr	r1, L246+40
	bl	fopen
	mov	r3, r0
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	bne	L236
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+92
	ldr	r2, [fp, #-20]
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-824]
	b	L190
L236:
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+48
	bl	fprintf
	ldr	r2, L246+52
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
L237:
	sub	r3, fp, #328
	mov	r0, r3
	mov	r1, #300
	ldr	r2, [fp, #-28]
	bl	fgets
	ldr	r0, [fp, #-28]
	bl	feof
	mov	r3, r0
	cmp	r3, #0
	beq	L240
	b	L238
L240:
	sub	r3, fp, #328
	mov	r0, r3
	bl	strlen
	mov	r3, r0
	sub	r3, r3, #1
	ldr	r2, L246+56
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L246+56
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L237
	ldr	r3, L246+56
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L237
	ldr	r3, L246+56
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L237
	sub	r3, fp, #328
	sub	r2, fp, #628
	mov	r0, r3
	mov	r1, r2
	bl	_Z11substlabelsPcS_
	sub	r3, fp, #628
	ldr	r2, L246+52
	mov	r0, r3
	ldr	r1, [r2, #0]
	bl	_Z5asmblPci
	mov	r2, r0
	ldr	r3, L246+52
	str	r2, [r3, #0]
	b	L237
L238:
	mov	r3, #0
	str	r3, [fp, #-672]
L242:
	ldr	r2, [fp, #-672]
	ldr	r3, [fp, #-688]
	cmp	r2, r3
	ble	L245
	b	L243
L245:
	ldr	r1, L246+8
	ldr	r0, L246+96
	ldr	r3, [fp, #-672]
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r2, r2, r3
	ldr	r3, [fp, #-672]
	mov	r0, r3, asl #2
	ldr	r3, L246+96
	ldr	r3, [r3, #0]
	add	r3, r0, r3
	ldr	r0, [r1, #0]
	ldr	r1, L246+100
	ldr	r3, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-672]
	add	r3, r3, #1
	str	r3, [fp, #-672]
	b	L242
L243:
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+104
	bl	fprintf
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	ldr	r1, L246+108
	ldr	r2, [fp, #-684]
	bl	fprintf
	ldr	r3, L246+8
	ldr	r0, [r3, #0]
	bl	fclose
	ldr	r3, L246+52
	ldr	r3, [r3, #0]
	str	r3, [fp, #-824]
L190:
	ldr	r0, [fp, #-824]
	ldmea	fp, {fp, sp, pc}
L247:
	.align	0
L246:
	.word	LC64
	.word	LC65
	.word	out1
	.word	LC49
	.word	LC50
	.word	exename
	.word	LC51
	.word	LC52
	.word	LC53
	.word	exenamea
	.word	LC55
	.word	LC56
	.word	LC57
	.word	adr
	.word	-316
	.word	-648
	.word	nl
	.word	labels
	.word	LC45
	.word	LC26
	.word	-315
	.word	LC58
	.word	LC59
	.word	LC60
	.word	code
	.word	LC61
	.word	LC62
	.word	LC63
	.align	0
	.global	_Z7getlinePcS_
_Z7getlinePcS_:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
L249:
	ldr	r3, [fp, #-16]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L250
	ldr	r3, [fp, #-16]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L250
	ldr	r3, [fp, #-16]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L251
	b	L250
L251:
	sub	r1, fp, #20
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	sub	lr, fp, #16
	ldr	r2, [lr, #0]
	mov	r3, r2
	ldrb	r3, [r3, #0]
	strb	r3, [ip, #0]
	add	r2, r2, #1
	str	r2, [lr, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
	b	L249
L250:
	sub	r1, fp, #20
	ldr	r0, [r1, #0]
	mov	r3, r0
	mov	ip, r3
	sub	lr, fp, #16
	ldr	r2, [lr, #0]
	mov	r3, r2
	ldrb	r3, [r3, #0]
	strb	r3, [ip, #0]
	add	r2, r2, #1
	str	r2, [lr, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
	sub	r1, fp, #20
	ldr	r2, [r1, #0]
	mov	r3, r2
	mov	r0, r3
	mov	r3, #0
	strb	r3, [r0, #0]
	add	r2, r2, #1
	str	r2, [r1, #0]
	ldr	r3, [fp, #-16]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.section .rdata
	.align	0
LC66:
	.ascii	"asmem\n\000"
	.align	0
LC67:
	.ascii	"avant boucle\n\000"
	.align	0
LC68:
	.ascii	"debut boucle\n\000"
	.align	0
LC69:
	.ascii	"ptr=%X line=<%s>\n\000"
	.align	0
LC70:
	.ascii	"fin\n\000"
	.align	0
LC71:
	.ascii	"test ligne\n\000"
	.align	0
LC72:
	.ascii	"ligne a traiter\n\000"
	.align	0
LC73:
	.ascii	"fin traitement ligne\n\000"
	.align	0
LC74:
	.ascii	"fin boucle\n\000"
	.align	0
LC76:
	.ascii	"2eme passe\n\000"
	.align	0
LC77:
	.ascii	"line=<%s>\n\000"
	.align	0
LC78:
	.ascii	"traitement\n\000"
	.align	0
LC79:
	.ascii	"test\n\000"
	.align	0
LC80:
	.ascii	"substlabels\n\000"
	.align	0
LC81:
	.ascii	"adr=%X line1=<%s>\n\000"
	.align	0
LC82:
	.ascii	"adr=%X\n\000"
	.align	0
LC75:
	.ascii	"apres boucle\n\000"
	.align	0
LC83:
	.ascii	"end asmem adr=%X\n\000"
	.text
	.align	0
	.global	_Z5asmemPiPc
_Z5asmemPiPc:
	@ args = 0, pretend = 0, frame = 1416
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #1424
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+12
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, L303
	ldr	r3, [r3, #0]
	str	r3, [fp, #-24]
	mov	r3, #0
	str	r3, [fp, #-1292]
	ldr	r2, L303+16
	ldr	r3, [fp, #-24]
	str	r3, [r2, #0]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+20
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, L303+16
	ldr	r0, [r3, #0]
	ldr	r1, L303+24
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-1276]
L254:
	ldr	r2, L303+28
	ldr	r3, [fp, #-1276]
	mov	r3, r3, asl #1
	add	r3, r3, r2
	ldrh	r3, [r3, #0]
	cmp	r3, #0
	bne	L257
	b	L255
L257:
	ldr	r2, L303+16
	ldr	r1, L303+28
	ldr	r3, [fp, #-1276]
	mov	r3, r3, asl #1
	add	r3, r3, r1
	ldrh	r3, [r3, #0]
	ldr	r0, [r2, #0]
	ldr	r1, L303+32
	mov	r2, r3
	bl	fprintf
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L254
L255:
	ldr	r3, L303+16
	ldr	r0, [r3, #0]
	ldr	r1, L303+36
	ldr	r2, L303+28
	bl	fprintf
	ldr	r3, L303+16
	ldr	r0, [r3, #0]
	ldr	r1, L303+40
	ldr	r2, L303+44
	bl	fprintf
	ldr	r3, [fp, #-20]
	str	r3, [fp, #-1296]
	ldr	r2, L303+168
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+48
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
L258:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+52
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	sub	r3, fp, #328
	ldr	r0, [fp, #-1296]
	mov	r1, r3
	bl	_Z7getlinePcS_
	mov	r3, r0
	str	r3, [fp, #-1296]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	sub	ip, fp, #328
	ldr	r0, [r3, #0]
	ldr	r1, L303+56
	ldr	r2, [fp, #-1296]
	mov	r3, ip
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, [fp, #-1296]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L261
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+60
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	b	L259
L261:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+64
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, L303+68
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L262
	ldr	r3, L303+68
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L262
	ldr	r3, L303+68
	sub	ip, fp, #12
	ldrb	r3, [ip, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L262
	ldr	r3, L303+68
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #37
	beq	L262
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+72
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	mov	r3, #0
	str	r3, [fp, #-1268]
	mov	r3, #0
	str	r3, [fp, #-1272]
	mov	r3, #0
	str	r3, [fp, #-1276]
L263:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L266
	b	L264
L266:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L267
	mov	r3, #1
	str	r3, [fp, #-1268]
L267:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L265
	mov	r3, #1
	str	r3, [fp, #-1272]
L265:
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L263
L264:
	ldr	r3, [fp, #-1268]
	cmp	r3, #0
	beq	L269
	mov	r3, #0
	str	r3, [fp, #-1280]
	mov	r3, #0
	str	r3, [fp, #-1276]
L270:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #58
	bne	L273
	b	L271
L273:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #44
	bne	L274
	ldr	r2, L303+76
	ldr	r3, [fp, #-1280]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L303+80
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L303+84
	add	r2, r2, r3
	sub	r3, fp, #1248
	sub	r3, r3, #12
	sub	r3, r3, #4
	mov	r0, r2
	mov	r1, r3
	mov	r2, #32
	bl	strncpy
	ldr	r2, L303+84
	ldr	r3, L303+80
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L303+168
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L303+80
	ldr	r3, L303+80
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
	mov	r3, #0
	str	r3, [fp, #-1280]
	b	L272
L274:
	sub	r1, fp, #1264
	sub	r1, r1, #12
	sub	r1, r1, #4
	ldr	r0, [r1, #0]
	mov	r3, r0
	ldr	r2, L303+76
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	ldr	ip, L303+68
	ldr	r3, [fp, #-1276]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, ip
	ldrb	r3, [r3, #0]
	strb	r3, [r2, #0]
	add	r0, r0, #1
	str	r0, [r1, #0]
L272:
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L270
L271:
	ldr	r2, L303+76
	ldr	r3, [fp, #-1280]
	sub	r1, fp, #12
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r3, L303+76
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L269
	ldr	r3, L303+80
	ldr	r2, [r3, #0]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L303+84
	add	r2, r2, r3
	sub	r3, fp, #1248
	sub	r3, r3, #12
	sub	r3, r3, #4
	mov	r0, r2
	mov	r1, r3
	mov	r2, #32
	bl	strncpy
	ldr	r2, L303+84
	ldr	r3, L303+80
	ldr	r1, [r3, #0]
	mov	r0, #32
	mov	r3, r1
	mov	r3, r3, asl #3
	add	r3, r3, r1
	mov	r3, r3, asl #2
	add	r3, r3, r2
	add	r2, r3, r0
	ldr	r3, L303+168
	ldr	r3, [r3, #0]
	str	r3, [r2, #0]
	ldr	r2, L303+80
	ldr	r3, L303+80
	ldr	r3, [r3, #0]
	add	r3, r3, #1
	str	r3, [r2, #0]
L269:
	ldr	r3, [fp, #-1272]
	cmp	r3, #0
	bne	L277
	mov	r3, #0
	str	r3, [fp, #-1424]
	mov	r3, #0
	str	r3, [fp, #-1276]
L278:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	ip, fp, #12
	add	r3, ip, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L281
	b	L279
L281:
	sub	r2, fp, #328
	ldr	r3, [fp, #-1276]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L303+88
	mov	r2, #2
	bl	strncmp
	mov	r3, r0
	cmp	r3, #0
	bne	L280
	mov	r3, #1
	str	r3, [fp, #-1424]
	sub	r2, fp, #328
	ldr	r3, [fp, #-1276]
	add	r3, r2, r3
	add	r2, r3, #2
	sub	r3, fp, #1408
	sub	r3, r3, #12
	sub	r3, r3, #8
	mov	r0, r2
	ldr	r1, L303+92
	mov	r2, r3
	bl	sscanf
	ldr	r1, L303+168
	ldr	r0, L303+168
	ldr	r3, [fp, #-1428]
	add	r2, r3, #3
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
	b	L279
L280:
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L278
L279:
	ldr	r3, [fp, #-1424]
	cmp	r3, #0
	bne	L284
	ldr	r2, L303+168
	ldr	r3, L303+168
	ldr	r3, [r3, #0]
	add	r3, r3, #4
	str	r3, [r2, #0]
	b	L284
L277:
	mov	r3, #0
	str	r3, [fp, #-1276]
L285:
	ldr	r2, L303+68
	ldr	r3, [fp, #-1276]
	sub	lr, fp, #12
	add	r3, lr, r3
	add	r3, r3, r2
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	bne	L287
	b	L286
L287:
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L285
L286:
	mov	r3, #0
	str	r3, [fp, #-1280]
L289:
	ldr	r1, L303+96
	ldr	r2, [fp, #-1276]
	ldr	r3, [fp, #-1280]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #34
	beq	L290
	ldr	r1, L303+96
	ldr	r2, [fp, #-1276]
	ldr	r3, [fp, #-1280]
	add	r3, r2, r3
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L290
	ldr	r1, L303+96
	ldr	r2, [fp, #-1276]
	ldr	r3, [fp, #-1280]
	add	r3, r2, r3
	sub	lr, fp, #12
	add	r3, r3, lr
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L290
	ldr	r1, L303+96
	ldr	r2, [fp, #-1276]
	ldr	r3, [fp, #-1280]
	add	r3, r2, r3
	sub	r2, fp, #12
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #13
	bne	L291
	b	L290
L291:
	ldr	r3, [fp, #-1280]
	add	r3, r3, #1
	str	r3, [fp, #-1280]
	b	L289
L290:
	ldr	r3, L303+16
	ldr	r0, [r3, #0]
	ldr	r1, L303+100
	ldr	r2, [fp, #-1280]
	bl	fprintf
	ldr	r1, L303+168
	ldr	r0, L303+168
	ldr	r3, [fp, #-1280]
	add	r2, r3, #4
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r3, r2
	str	r3, [r1, #0]
L284:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+104
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
L262:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+108
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	b	L258
L259:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+144
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	mov	r3, #0
	str	r3, [fp, #-1276]
L294:
	ldr	r3, L303+80
	ldr	r2, [fp, #-1276]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L297
	b	L295
L297:
	ldr	r1, L303+16
	ldr	r2, [fp, #-1276]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L303+84
	add	r2, r2, r3
	ldr	r0, L303+84
	ldr	ip, [fp, #-1276]
	mov	lr, #32
	mov	r3, ip
	mov	r3, r3, asl #3
	add	r3, r3, ip
	mov	r3, r3, asl #2
	add	r3, r3, r0
	add	r3, r3, lr
	ldr	r0, [r1, #0]
	ldr	r1, L303+112
	ldr	r3, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-1276]
	add	r3, r3, #1
	str	r3, [fp, #-1276]
	b	L294
L295:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+116
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, [fp, #-20]
	str	r3, [fp, #-1296]
	ldr	r2, L303+168
	ldr	r3, [fp, #-16]
	str	r3, [r2, #0]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+48
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
L298:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+52
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	sub	r3, fp, #328
	ldr	r0, [fp, #-1296]
	mov	r1, r3
	bl	_Z7getlinePcS_
	mov	r3, r0
	str	r3, [fp, #-1296]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	sub	r2, fp, #328
	ldr	r0, [r3, #0]
	ldr	r1, L303+120
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+124
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	sub	r3, fp, #328
	mov	r0, r3
	bl	strlen
	mov	r3, r0
	sub	r3, r3, #1
	ldr	r2, L303+68
	sub	ip, fp, #12
	add	r3, r3, ip
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+128
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, L303+68
	sub	lr, fp, #12
	ldrb	r3, [lr, r3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L301
	ldr	r3, L303+68
	sub	r1, fp, #12
	ldrb	r3, [r1, r3]	@ zero_extendqisi2
	cmp	r3, #10
	beq	L301
	ldr	r3, L303+68
	sub	r2, fp, #12
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #13
	beq	L301
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+132
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	sub	r2, fp, #328
	sub	r3, fp, #1216
	sub	r3, r3, #12
	sub	r3, r3, #4
	mov	r0, r2
	mov	r1, r3
	bl	_Z11substlabelsPcS_
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r2, L303
	ldr	ip, L303+168
	sub	r3, fp, #1216
	sub	r3, r3, #12
	sub	r3, r3, #4
	ldr	r0, [r2, #0]
	ldr	r1, L303+136
	ldr	r2, [ip, #0]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	sub	r3, fp, #1216
	sub	r3, r3, #12
	sub	r3, r3, #4
	ldr	r2, L303+168
	mov	r0, r3
	ldr	r1, [r2, #0]
	bl	_Z5asmblPci
	mov	r2, r0
	ldr	r3, L303+168
	str	r2, [r3, #0]
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r2, L303+168
	ldr	r0, [r3, #0]
	ldr	r1, L303+140
	ldr	r2, [r2, #0]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
L301:
	ldr	r3, [fp, #-1296]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	bne	L302
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+60
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	b	L299
L302:
	ldr	r2, L303
	ldr	ip, L303+4
	ldr	lr, L303+4
	ldr	r3, L303+8
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+8
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	ldr	r1, L303+108
	bl	fprintf
	ldr	r3, L303
	ldr	r0, [r3, #0]
	bl	fflush
	b	L298
L304:
	.align	0
L303:
	.word	ftrace
	.word	globals
	.word	out
	.word	LC66
	.word	out1
	.word	LC49
	.word	LC50
	.word	exename
	.word	LC51
	.word	LC52
	.word	LC53
	.word	exenamea
	.word	LC67
	.word	LC68
	.word	LC69
	.word	LC70
	.word	LC71
	.word	-316
	.word	LC72
	.word	-1252
	.word	nl
	.word	labels
	.word	LC45
	.word	LC26
	.word	-315
	.word	LC58
	.word	LC73
	.word	LC74
	.word	LC59
	.word	LC76
	.word	LC77
	.word	LC78
	.word	LC79
	.word	LC80
	.word	LC81
	.word	LC82
	.word	LC75
	.word	globals
	.word	out
	.word	LC46
	.word	LC83
	.word	ftrace
	.word	adr
L299:
	ldr	r2, L303+164
	ldr	ip, L303+148
	ldr	lr, L303+148
	ldr	r3, L303+152
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+152
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303+164
	ldr	r0, [r3, #0]
	ldr	r1, L303+144
	bl	fprintf
	ldr	r3, L303+164
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r2, L303+164
	ldr	ip, L303+148
	ldr	lr, L303+148
	ldr	r3, L303+152
	ldr	r3, [r3, #0]
	str	r3, [sp, #0]
	ldr	r3, L303+152
	ldr	r3, [r3, #4]
	str	r3, [sp, #4]
	ldr	r0, [r2, #0]
	ldr	r1, L303+156
	ldr	r2, [ip, #424]
	ldr	r3, [lr, #428]
	bl	fprintf
	ldr	r3, L303+164
	ldr	r2, L303+168
	ldr	r0, [r3, #0]
	ldr	r1, L303+160
	ldr	r2, [r2, #0]
	bl	fprintf
	ldr	r3, L303+164
	ldr	r0, [r3, #0]
	bl	fflush
	ldr	r3, L303+168
	ldr	r3, [r3, #0]
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z5fieldjj
_Z5fieldjj:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
L306:
	ldr	r3, [fp, #-20]
	and	r3, r3, #1
	cmp	r3, #0
	beq	L308
	b	L307
L308:
	ldr	r3, [fp, #-20]
	mov	r3, r3, lsr #1
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-16]
	mov	r3, r3, lsr #1
	str	r3, [fp, #-16]
	b	L306
L307:
	ldr	r2, [fp, #-16]
	ldr	r3, [fp, #-20]
	and	r3, r2, r3
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z6sfieldjj
_Z6sfieldjj:
	@ args = 0, pretend = 0, frame = 20
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #20
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
L310:
	ldr	r3, [fp, #-20]
	and	r3, r3, #1
	cmp	r3, #0
	beq	L312
	b	L311
L312:
	ldr	r3, [fp, #-20]
	mov	r3, r3, lsr #1
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-16]
	mov	r3, r3, lsr #1
	str	r3, [fp, #-16]
	b	L310
L311:
	ldr	r3, [fp, #-20]
	add	r3, r3, #1
	mov	r3, r3, lsr #1
	str	r3, [fp, #-24]
	ldr	r2, [fp, #-16]
	ldr	r3, [fp, #-24]
	and	r3, r2, r3
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-28]
	cmp	r3, #0
	bne	L313
	ldr	r3, [fp, #-16]
	ldr	r2, [fp, #-20]
	and	r3, r3, r2
	str	r3, [fp, #-32]
	b	L309
L313:
	ldr	r2, [fp, #-16]
	ldr	r3, [fp, #-20]
	and	r3, r2, r3
	ldr	r2, [fp, #-20]
	mvn	r2, r2
	orr	r3, r3, r2
	str	r3, [fp, #-32]
L309:
	ldr	r0, [fp, #-32]
	ldmea	fp, {fp, sp, pc}
	.align	0
	.global	_Z6rotatejj
_Z6rotatejj:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #8
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r2, [fp, #-16]
	ldr	r3, [fp, #-20]
	mov	r3, r2, ror r3
	mov	r0, r3
	ldmea	fp, {fp, sp, pc}
	.section .rdata
	.align	0
LC84:
	.word	LC27
	.word	LC28
	.word	LC29
	.word	LC30
	.word	LC31
	.word	LC32
	.word	LC33
	.word	LC34
	.word	LC35
	.word	LC36
	.word	LC37
	.word	LC38
	.word	LC39
	.word	LC40
	.word	LC41
	.word	LC42
	.align	0
LC85:
	.ascii	"&\000"
	.align	0
LC86:
	.ascii	"!\000"
	.align	0
LC87:
	.ascii	"-\000"
	.align	0
LC88:
	.ascii	"*-1+\000"
	.align	0
LC89:
	.ascii	"+\000"
	.align	0
LC90:
	.ascii	"+c+\000"
	.align	0
LC91:
	.ascii	"-!c-\000"
	.align	0
LC92:
	.ascii	"*-1-!c+\000"
	.align	0
LC93:
	.ascii	"?&\000"
	.align	0
LC94:
	.ascii	"?!\000"
	.align	0
LC95:
	.ascii	"?-\000"
	.align	0
LC96:
	.ascii	"?+\000"
	.align	0
LC97:
	.ascii	"|\000"
	.align	0
LC98:
	.ascii	"->\000"
	.align	0
LC99:
	.ascii	"&!\000"
	.align	0
LC100:
	.ascii	"->~\000"
	.align	0
LC101:
	.word	LC85
	.word	LC86
	.word	LC87
	.word	LC88
	.word	LC89
	.word	LC90
	.word	LC91
	.word	LC92
	.word	LC93
	.word	LC94
	.word	LC95
	.word	LC96
	.word	LC97
	.word	LC98
	.word	LC99
	.word	LC100
	.align	0
LC102:
	.ascii	"<<\000"
	.align	0
LC103:
	.ascii	">>\000"
	.align	0
LC104:
	.ascii	"->>\000"
	.align	0
LC105:
	.ascii	">>>\000"
	.align	0
LC106:
	.word	LC102
	.word	LC103
	.word	LC104
	.word	LC105
	.align	0
LC108:
	.ascii	"#%X == %s \000"
	.align	0
LC109:
	.ascii	" \000"
	.align	0
LC110:
	.ascii	"BX [R%X]\000"
	.align	0
LC111:
	.ascii	"#%07X\000"
	.align	0
LC112:
	.ascii	"GOTO %s\000"
	.align	0
LC113:
	.ascii	"GOTO %X\000"
	.align	0
LC114:
	.ascii	"%s ()\000"
	.align	0
LC115:
	.ascii	"%X ()\000"
	.align	0
LC116:
	.ascii	"PUSH R%X %04X\000"
	.align	0
LC117:
	.ascii	"POP R%X %04X\000"
	.align	0
LC118:
	.ascii	"R%X = R%X\000"
	.align	0
LC119:
	.ascii	"R%X ?= R%X\000"
	.align	0
LC122:
	.ascii	"R%X = R%X %s R%X\000"
	.align	0
LC123:
	.ascii	"R%X ?= R%X %s R%X\000"
	.align	0
LC124:
	.ascii	"R%X = %X\000"
	.align	0
LC125:
	.ascii	"R%X ?= %X\000"
	.align	0
LC126:
	.ascii	"R%X = R%X %s R%X %s %X\000"
	.align	0
LC127:
	.ascii	"R%X ?= R%X %s R%X %s %X\000"
	.align	0
LC128:
	.ascii	"R%X = R%X %s R%X %s R%X\000"
	.align	0
LC129:
	.ascii	"R%X ?= R%X %s R%X %s R%X\000"
	.align	0
LC120:
	.ascii	"R%X = R%X %s %X\000"
	.align	0
LC121:
	.ascii	"R%X ?= R%X %s %X\000"
	.align	0
LC131:
	.ascii	"R%X,%c=%X\000"
	.align	0
LC133:
	.ascii	"R%X%c%X\000"
	.align	0
LC134:
	.ascii	"==%X\000"
	.align	0
LC107:
	.ascii	"%s\000"
	.align	0
LC135:
	.ascii	"==%s\000"
	.align	0
LC136:
	.ascii	"R%X%c=%X\000"
	.align	0
LC137:
	.ascii	"$[%s]\000"
	.align	0
LC141:
	.ascii	"R%X %s %X\000"
	.align	0
LC132:
	.ascii	"=U\000"
	.align	0
LC142:
	.ascii	"R%X,%c=%s\000"
	.align	0
LC143:
	.ascii	"R%X%c%s\000"
	.align	0
LC144:
	.ascii	"R%X%c=%s\000"
	.align	0
LC146:
	.ascii	"$[ %s]\000"
	.align	0
LC138:
	.ascii	"[%s]\000"
	.align	0
LC139:
	.ascii	"R%X %s %s\000"
	.align	0
LC140:
	.ascii	"%s %s R%X\000"
	.align	0
LC147:
	.ascii	"?=\000"
	.align	0
LC130:
	.ascii	"=\000"
	.align	0
LC148:
	.ascii	"[R%X-]\000"
	.align	0
LC149:
	.ascii	"[R%X-=]\000"
	.align	0
LC150:
	.ascii	"[R%X+]\000"
	.align	0
LC151:
	.ascii	"[R%X+=]\000"
	.align	0
LC152:
	.ascii	"[R%X--]\000"
	.align	0
LC153:
	.ascii	"[R%X--=]\000"
	.align	0
LC154:
	.ascii	"[R%X++]\000"
	.align	0
LC155:
	.ascii	"[R%X++=]\000"
	.align	0
LC145:
	.ascii	"?\000"
	.align	0
LC156:
	.ascii	"RR#%04X %s %s\000"
	.align	0
LC157:
	.ascii	"%s %s RR#%04X\000"
	.align	0
LC158:
	.ascii	"R%X = [R%X] = R%X\000"
	.align	0
LC159:
	.ascii	"R%X = $[R%X] = R%X\000"
	.align	0
LC160:
	.ascii	"R%X X= [R%X]\000"
	.align	0
LC161:
	.ascii	"[R%X] X= R%X\000"
	.align	0
LC162:
	.ascii	"R%X = +$[R%X+R%X]\000"
	.align	0
LC163:
	.ascii	"$$[R%X,%c=%X]\000"
	.align	0
LC164:
	.ascii	"$$[R%X%c=%X]\000"
	.align	0
LC165:
	.ascii	"$$[R%X%c%X]\000"
	.align	0
LC166:
	.ascii	"[?]\000"
	.align	0
LC167:
	.ascii	"R%X = %s\000"
	.align	0
LC168:
	.ascii	"%s = R%X\000"
	.align	0
LC169:
	.ascii	"R%X = R%X * R%X\000"
	.text
	.align	0
	.global	_Z8printasmPcjj
_Z8printasmPcjj:
	@ args = 0, pretend = 0, frame = 1300
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #1312
	sub	sp, sp, #4
	str	r0, [fp, #-24]
	str	r1, [fp, #-28]
	str	r2, [fp, #-32]
	ldr	r3, L476
	sub	lr, fp, #1088
	sub	lr, lr, #4
	sub	lr, lr, #12
	mov	ip, r3
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, L476+4
	sub	lr, fp, #1152
	sub	lr, lr, #4
	sub	lr, lr, #12
	mov	ip, r3
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip!, {r0, r1, r2, r3}
	stmia	lr!, {r0, r1, r2, r3}
	ldmia	ip, {r0, r1, r2, r3}
	stmia	lr, {r0, r1, r2, r3}
	ldr	r3, L476+8
	sub	ip, fp, #1168
	sub	ip, ip, #4
	sub	ip, ip, #12
	ldmia	r3, {r0, r1, r2, r3}
	stmia	ip, {r0, r1, r2, r3}
	ldr	r3, [fp, #-32]
	str	r3, [fp, #-1208]
	ldr	r0, [fp, #-28]
	mov	r1, #983040
	bl	_Z5fieldjj
	mov	r3, r0
	str	r3, [fp, #-1188]
	ldr	r0, [fp, #-28]
	mov	r1, #61440
	bl	_Z5fieldjj
	mov	r3, r0
	str	r3, [fp, #-1192]
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r3, r0
	str	r3, [fp, #-1196]
	ldr	r0, [fp, #-28]
	mov	r1, #15
	bl	_Z5fieldjj
	mov	r3, r0
	str	r3, [fp, #-1200]
	mov	r3, #0
	str	r3, [fp, #-1036]
	mov	r3, #0
	str	r3, [fp, #-1040]
L317:
	ldr	r3, L476+176
	ldr	r2, [fp, #-1040]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L320
	b	L318
L320:
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L476+188
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldr	r2, [fp, #-28]
	ldr	r3, [r3, #32]
	cmp	r2, r3
	bne	L319
	ldr	r3, L476+180
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L322
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r1, r2, r3
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+184
	mov	r2, r3
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L322:
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r1, r2, r3
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+12
	ldr	r2, [fp, #-28]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
L319:
	ldr	r3, [fp, #-1040]
	add	r3, r3, #1
	str	r3, [fp, #-1040]
	b	L317
L318:
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [fp, #-28]
	mov	r3, r3, lsr #28
	ldr	r1, L476+16
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r3, r3, r1
	mov	r0, r2
	ldr	r1, [r3, #0]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+20
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	ldr	r0, [fp, #-28]
	ldr	r1, L476+24
	ldr	r2, L476+28
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L325
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+32
	ldr	r2, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L325:
	ldr	r0, [fp, #-28]
	mov	r1, #-268435456
	mov	r2, #-268435456
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L327
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [fp, #-28]
	bic	r3, r3, #-268435456
	mov	r0, r2
	ldr	r1, L476+36
	mov	r2, r3
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L327:
	ldr	r0, [fp, #-28]
	mov	r1, #167772160
	mov	r2, #251658240
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L329
	mov	r3, #0
	str	r3, [fp, #-1212]
	mov	r3, #0
	str	r3, [fp, #-1040]
L330:
	ldr	r3, L476+176
	ldr	r2, [fp, #-1040]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L333
	b	L331
L333:
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L476+188
	ldr	r3, [r3, #0]
	add	r4, r2, r3
	ldr	r0, [fp, #-28]
	mvn	r1, #-16777216
	bl	_Z6sfieldjj
	mov	r3, r0
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	add	r2, r3, #8
	ldr	r3, [r4, #32]
	cmp	r3, r2
	bne	L332
	mov	r3, #1
	str	r3, [fp, #-1212]
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r1, r2, r3
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+40
	mov	r2, r3
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
L332:
	ldr	r3, [fp, #-1040]
	add	r3, r3, #1
	str	r3, [fp, #-1040]
	b	L330
L331:
	ldr	r3, [fp, #-1212]
	cmp	r3, #0
	bne	L323
	ldr	r0, [fp, #-28]
	mvn	r1, #-16777216
	bl	_Z6sfieldjj
	mov	r3, r0
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	add	ip, r3, #8
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+44
	mov	r2, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L329:
	ldr	r0, [fp, #-28]
	mov	r1, #184549376
	mov	r2, #251658240
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L337
	mov	r3, #0
	str	r3, [fp, #-1212]
	mov	r3, #0
	str	r3, [fp, #-1040]
L338:
	ldr	r3, L476+176
	ldr	r2, [fp, #-1040]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L341
	b	L339
L341:
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L476+188
	ldr	r3, [r3, #0]
	add	r4, r2, r3
	ldr	r0, [fp, #-28]
	mvn	r1, #-16777216
	bl	_Z6sfieldjj
	mov	r3, r0
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	add	r2, r3, #8
	ldr	r3, [r4, #32]
	cmp	r3, r2
	bne	L340
	mov	r3, #1
	str	r3, [fp, #-1212]
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r1, r2, r3
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+48
	mov	r2, r3
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
L340:
	ldr	r3, [fp, #-1040]
	add	r3, r3, #1
	str	r3, [fp, #-1040]
	b	L338
L339:
	ldr	r3, [fp, #-1212]
	cmp	r3, #0
	bne	L323
	ldr	r0, [fp, #-28]
	mvn	r1, #-16777216
	bl	_Z6sfieldjj
	mov	r3, r0
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-32]
	add	r3, r2, r3
	add	ip, r3, #8
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+52
	mov	r2, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L337:
	ldr	r0, [fp, #-28]
	mov	r1, #16777216
	ldr	r2, L476+56
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L345
	sub	r3, fp, #1024
	sub	r3, r3, #8
	mov	r0, r3
	ldr	r1, L476+244
	ldr	r2, [fp, #-28]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L345:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+60
	ldr	r2, L476+64
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L347
	sub	r3, fp, #1024
	sub	r3, r3, #8
	mov	r0, r3
	ldr	r1, L476+244
	ldr	r2, [fp, #-28]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L347:
	ldr	r0, [fp, #-28]
	mov	r1, #153092096
	mov	r2, #267386880
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L349
	ldr	r0, [fp, #-28]
	mov	r1, #983040
	bl	_Z5fieldjj
	mov	r4, r0
	ldr	r0, [fp, #-28]
	ldr	r1, L476+304
	bl	_Z5fieldjj
	mov	ip, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+68
	mov	r2, r4
	mov	r3, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L349:
	ldr	r0, [fp, #-28]
	mov	r1, #145752064
	mov	r2, #267386880
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L351
	ldr	r0, [fp, #-28]
	mov	r1, #983040
	bl	_Z5fieldjj
	mov	r4, r0
	ldr	r0, [fp, #-28]
	ldr	r1, L476+304
	bl	_Z5fieldjj
	mov	ip, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+72
	mov	r2, r4
	mov	r3, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L351:
	ldr	r0, [fp, #-28]
	mov	r1, #27262976
	ldr	r2, L476+324
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L353
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+76
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L353:
	ldr	r0, [fp, #-28]
	mov	r1, #28311552
	ldr	r2, L476+80
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L355
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+84
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L355:
	ldr	r0, [fp, #-28]
	mov	r1, #27262976
	ldr	r2, L476+80
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L357
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #3968
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	str	r1, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+148
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L357:
	ldr	r0, [fp, #-28]
	mov	r1, #28311552
	ldr	r2, L476+80
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L359
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #3968
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	str	r1, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+156
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L359:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+88
	ldr	r2, L476+92
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L361
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r1, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1196]
	str	r3, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+96
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L361:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+100
	ldr	r2, L476+92
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L363
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r1, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1196]
	str	r3, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+104
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1200]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L363:
	ldr	r0, [fp, #-28]
	mov	r1, #60817408
	mov	r2, #267386880
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L365
	ldr	r0, [fp, #-28]
	mov	r1, #255
	bl	_Z5fieldjj
	mov	r4, r0
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	_Z6rotatejj
	mov	ip, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+108
	ldr	r2, [fp, #-1192]
	mov	r3, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L365:
	ldr	r0, [fp, #-28]
	mov	r1, #61865984
	mov	r2, #267386880
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L367
	ldr	r0, [fp, #-28]
	mov	r1, #255
	bl	_Z5fieldjj
	mov	r4, r0
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r3, r0
	mov	r0, r4
	mov	r1, r3
	bl	_Z6rotatejj
	mov	ip, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+112
	ldr	r2, [fp, #-1192]
	mov	r3, ip
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L367:
	ldr	r0, [fp, #-28]
	mov	r1, #0
	ldr	r2, L476+116
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L369
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r1, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+96
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L369:
	ldr	r0, [fp, #-28]
	mov	r1, #1048576
	ldr	r2, L476+116
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L371
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r1, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+104
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L371:
	ldr	r0, [fp, #-28]
	mov	r1, #0
	ldr	r2, L476+120
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L373
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r5, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #3968
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	ldr	r3, [r5, #0]
	str	r3, [sp, #8]
	str	r1, [sp, #12]
	mov	r0, r2
	ldr	r1, L476+124
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L373:
	ldr	r0, [fp, #-28]
	mov	r1, #1048576
	ldr	r2, L476+120
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L375
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r5, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #3968
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	ldr	r3, [r5, #0]
	str	r3, [sp, #8]
	str	r1, [sp, #12]
	mov	r0, r2
	ldr	r1, L476+128
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L375:
	ldr	r0, [fp, #-28]
	mov	r1, #16
	ldr	r2, L476+140
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L377
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	ldr	r3, [r1, #0]
	str	r3, [sp, #8]
	ldr	r3, [fp, #-1196]
	str	r3, [sp, #12]
	mov	r0, r2
	ldr	r1, L476+132
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L477:
	.align	0
L476:
	.word	LC84
	.word	LC101
	.word	LC106
	.word	LC108
	.word	-1084
	.word	LC109
	.word	18874384
	.word	267387120
	.word	LC110
	.word	LC111
	.word	LC112
	.word	LC113
	.word	LC114
	.word	LC115
	.word	261095440
	.word	16777232
	.word	261095568
	.word	LC116
	.word	LC117
	.word	LC118
	.word	267386896
	.word	LC119
	.word	27262992
	.word	267387024
	.word	LC122
	.word	28311568
	.word	LC123
	.word	LC124
	.word	LC125
	.word	235933680
	.word	235929616
	.word	LC126
	.word	LC127
	.word	LC128
	.word	1048592
	.word	235929744
	.word	LC129
	.word	LC120
	.word	-1148
	.word	LC121
	.word	4095
	.word	LC131
	.word	LC133
	.word	LC134
	.word	nl
	.word	dasm
	.word	LC107
	.word	tabadr
	.word	LC135
	.word	LC136
	.word	LC137
	.word	234881040
	.word	-1164
	.word	LC141
	.word	LC132
	.word	LC142
	.word	LC143
	.word	-1193
	.word	LC144
	.word	LC146
	.word	LC138
	.word	LC26
	.word	LC139
	.word	LC140
	.word	LC147
	.word	LC130
	.word	LC148
	.word	LC149
	.word	LC150
	.word	LC151
	.word	LC152
	.word	LC153
	.word	LC154
	.word	LC155
	.word	LC145
	.word	LC156
	.word	65535
	.word	LC157
	.word	16777360
	.word	LC158
	.word	20971664
	.word	267390960
	.word	LC159
	.word	26218399
	.word	LC160
	.word	25169823
	.word	267390975
L377:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+136
	ldr	r2, L476+140
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L379
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r1, r3, r2
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #4]
	ldr	r3, [r1, #0]
	str	r3, [sp, #8]
	ldr	r3, [fp, #-1196]
	str	r3, [sp, #12]
	mov	r0, r2
	ldr	r1, L476+144
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L379:
	ldr	r0, [fp, #-28]
	mov	r1, #33554432
	mov	r2, #235929600
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L381
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #255
	bl	_Z5fieldjj
	mov	r5, r0
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	_Z6rotatejj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	str	r1, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+148
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L381:
	ldr	r0, [fp, #-28]
	mov	r1, #34603008
	mov	r2, #235929600
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L383
	ldr	r0, [fp, #-28]
	mov	r1, #31457280
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+152
	mov	r3, r3, asl #2
	sub	r0, fp, #20
	add	r3, r3, r0
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #255
	bl	_Z5fieldjj
	mov	r5, r0
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r3, r0
	mov	r0, r5
	mov	r1, r3
	bl	_Z6rotatejj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [r4, #0]
	str	r3, [sp, #0]
	str	r1, [sp, #4]
	mov	r0, r2
	ldr	r1, L476+156
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L383:
	ldr	r0, [fp, #-28]
	mov	r1, #67108864
	mov	r2, #234881024
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L385
	ldr	r3, [fp, #-28]
	and	r3, r3, #8388608
	cmp	r3, #0
	beq	L386
	ldr	r3, L476+228
	mov	r2, #43
	sub	r1, fp, #20
	strb	r2, [r1, r3]
	b	L387
L386:
	ldr	r3, L476+228
	mov	r2, #45
	sub	r0, fp, #20
	strb	r2, [r0, r3]
L387:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+160
	bl	_Z5fieldjj
	mov	r3, r0
	str	r3, [fp, #-1288]
	ldr	r0, [fp, #-28]
	mov	r1, #67108864
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L388
	ldr	r3, L476+260
	str	r3, [fp, #-1220]
	sub	r2, fp, #1248
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r1, fp, #20
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+164
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L389
L388:
	ldr	r0, [fp, #-28]
	mov	r1, #69206016
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L390
	ldr	r3, L476+216
	str	r3, [fp, #-1220]
	sub	r2, fp, #1248
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+164
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L389
L390:
	ldr	r0, [fp, #-28]
	mov	r1, #83886080
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L392
	ldr	r3, L476+260
	str	r3, [fp, #-1220]
	sub	r2, fp, #1248
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r1, fp, #20
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+168
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	ldr	r3, [fp, #-1188]
	cmp	r3, #15
	bne	L389
	ldr	r3, L476+228
	sub	r2, fp, #20
	ldrb	r3, [r2, r3]	@ zero_extendqisi2
	cmp	r3, #43
	bne	L394
	ldr	r2, [fp, #-1208]
	ldr	r3, [fp, #-1288]
	add	r3, r2, r3
	add	r3, r3, #8
	str	r3, [fp, #-1204]
	b	L395
L394:
	ldr	r2, [fp, #-1208]
	ldr	r3, [fp, #-1288]
	rsb	r3, r3, r2
	add	r3, r3, #8
	str	r3, [fp, #-1204]
L395:
	ldr	r3, L476+180
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L396
	sub	r3, fp, #1248
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+244
	ldr	r2, [fp, #-1204]
	bl	sprintf
	b	L397
L396:
	sub	r4, fp, #1248
	sub	r4, r4, #4
	sub	r3, fp, #1248
	sub	r3, r3, #4
	mov	r0, r3
	bl	strlen
	mov	r3, r0
	add	r3, r4, r3
	mov	r0, r3
	ldr	r1, L476+172
	ldr	r2, [fp, #-1204]
	bl	sprintf
L397:
	mov	r3, #0
	str	r3, [fp, #-1040]
L398:
	ldr	r3, L476+176
	ldr	r2, [fp, #-1040]
	ldr	r3, [r3, #0]
	cmp	r2, r3
	blt	L401
	b	L389
L401:
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, L476+188
	ldr	r3, [r3, #0]
	add	r3, r2, r3
	ldr	r2, [fp, #-1204]
	ldr	r3, [r3, #32]
	cmp	r2, r3
	bne	L400
	ldr	r3, L476+180
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L403
	sub	r1, fp, #1248
	sub	r1, r1, #4
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+184
	mov	r2, r3
	bl	sprintf
	b	L400
L403:
	sub	r4, fp, #1248
	sub	r4, r4, #4
	sub	r3, fp, #1248
	sub	r3, r3, #4
	mov	r0, r3
	bl	strlen
	mov	r3, r0
	add	r1, r4, r3
	ldr	r0, L476+188
	ldr	r2, [fp, #-1040]
	mov	r3, r2
	mov	r3, r3, asl #3
	add	r3, r3, r2
	mov	r2, r3, asl #2
	ldr	r3, [r0, #0]
	add	r3, r2, r3
	mov	r0, r1
	ldr	r1, L476+192
	mov	r2, r3
	bl	sprintf
L400:
	ldr	r3, [fp, #-1040]
	add	r3, r3, #1
	str	r3, [fp, #-1040]
	b	L398
L392:
	ldr	r0, [fp, #-28]
	mov	r1, #85983232
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L389
	ldr	r3, L476+260
	str	r3, [fp, #-1220]
	sub	r2, fp, #1248
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+196
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
L389:
	ldr	r3, [fp, #-28]
	and	r3, r3, #4194304
	cmp	r3, #0
	beq	L407
	sub	r3, fp, #1280
	sub	r3, r3, #4
	sub	r2, fp, #1248
	sub	r2, r2, #4
	mov	r0, r3
	ldr	r1, L476+200
	bl	sprintf
	b	L408
L407:
	sub	r3, fp, #1280
	sub	r3, r3, #4
	sub	r2, fp, #1248
	sub	r2, r2, #4
	mov	r0, r3
	ldr	r1, L476+240
	bl	sprintf
L408:
	ldr	r3, [fp, #-28]
	and	r3, r3, #1048576
	cmp	r3, #0
	beq	L409
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1280
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+248
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1220]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L409:
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	ip, fp, #1280
	sub	ip, ip, #4
	ldr	r3, [fp, #-1192]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+252
	mov	r2, ip
	ldr	r3, [fp, #-1220]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L385:
	ldr	r0, [fp, #-28]
	mov	r1, #100663296
	ldr	r2, L476+204
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L412
	ldr	r3, [fp, #-28]
	and	r3, r3, #8388608
	cmp	r3, #0
	beq	L413
	ldr	r3, L476+228
	mov	r2, #43
	sub	r1, fp, #20
	strb	r2, [r1, r3]
	b	L414
L413:
	ldr	r3, L476+228
	mov	r2, #45
	sub	r0, fp, #20
	strb	r2, [r0, r3]
L414:
	ldr	r0, [fp, #-28]
	mov	r1, #96
	bl	_Z5fieldjj
	mov	r3, r0
	ldr	r2, L476+208
	mov	r3, r3, asl #2
	sub	r1, fp, #20
	add	r3, r3, r1
	add	r4, r3, r2
	ldr	r0, [fp, #-28]
	mov	r1, #3968
	bl	_Z5fieldjj
	mov	r2, r0
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r2, [sp, #0]
	mov	r0, r3
	ldr	r1, L476+212
	ldr	r2, [fp, #-1200]
	ldr	r3, [r4, #0]
	bl	sprintf
	ldr	r0, [fp, #-28]
	mov	r1, #100663296
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L415
	ldr	r3, L476+260
	str	r3, [fp, #-1288]
	sub	r2, fp, #1280
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+220
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L416
L415:
	ldr	r0, [fp, #-28]
	mov	r1, #102760448
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L417
	ldr	r3, L476+216
	str	r3, [fp, #-1288]
	sub	r2, fp, #1280
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r1, fp, #20
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+220
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L416
L417:
	ldr	r0, [fp, #-28]
	mov	r1, #117440512
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L419
	ldr	r3, L476+260
	str	r3, [fp, #-1288]
	sub	r2, fp, #1280
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+224
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L416
L419:
	ldr	r0, [fp, #-28]
	mov	r1, #119537664
	mov	r2, #253755392
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L421
	ldr	r3, L476+260
	str	r3, [fp, #-1288]
	sub	r2, fp, #1280
	sub	r2, r2, #4
	ldr	r3, L476+228
	sub	r1, fp, #20
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+232
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L416
L421:
	ldr	r3, L476+296
	str	r3, [fp, #-1288]
	sub	r3, fp, #1280
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+296
	bl	sprintf
L416:
	ldr	r3, [fp, #-28]
	and	r3, r3, #4194304
	cmp	r3, #0
	beq	L423
	sub	r3, fp, #1248
	sub	r3, r3, #4
	sub	r2, fp, #1280
	sub	r2, r2, #4
	mov	r0, r3
	ldr	r1, L476+236
	bl	sprintf
	b	L424
L423:
	sub	r3, fp, #1248
	sub	r3, r3, #4
	sub	r2, fp, #1280
	sub	r2, r2, #4
	mov	r0, r3
	ldr	r1, L476+240
	bl	sprintf
L424:
	ldr	r0, [fp, #-1288]
	ldr	r1, L476+296
	bl	strcmp
	mov	r3, r0
	cmp	r3, #0
	bne	L425
	sub	r3, fp, #1024
	sub	r3, r3, #8
	mov	r0, r3
	ldr	r1, L476+244
	ldr	r2, [fp, #-28]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L425:
	ldr	r3, [fp, #-28]
	and	r3, r3, #1048576
	cmp	r3, #0
	beq	L427
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1248
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+248
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1288]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L427:
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	ip, fp, #1248
	sub	ip, ip, #4
	ldr	r3, [fp, #-1192]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+252
	mov	r2, ip
	ldr	r3, [fp, #-1288]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L412:
	ldr	r0, [fp, #-28]
	mov	r1, #134217728
	mov	r2, #234881024
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L430
	ldr	r3, [fp, #-28]
	and	r3, r3, #4194304
	cmp	r3, #0
	beq	L431
	ldr	r3, L476+256
	str	r3, [fp, #-1288]
	b	L432
L431:
	ldr	r3, L476+260
	str	r3, [fp, #-1288]
L432:
	ldr	r0, [fp, #-28]
	mov	r1, #134217728
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L433
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+264
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L433:
	ldr	r0, [fp, #-28]
	mov	r1, #136314880
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L435
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+268
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L435:
	ldr	r0, [fp, #-28]
	mov	r1, #142606336
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L437
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+272
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L437:
	ldr	r0, [fp, #-28]
	mov	r1, #144703488
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L439
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+276
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L439:
	ldr	r0, [fp, #-28]
	mov	r1, #150994944
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L441
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+280
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L441:
	ldr	r0, [fp, #-28]
	mov	r1, #153092096
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L443
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+284
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L443:
	ldr	r0, [fp, #-28]
	mov	r1, #159383552
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L445
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+288
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L445:
	ldr	r0, [fp, #-28]
	mov	r1, #161480704
	mov	r2, #262144000
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L447
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+292
	ldr	r2, [fp, #-1188]
	bl	sprintf
	b	L434
L447:
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L476+296
	bl	sprintf
L434:
	ldr	r3, [fp, #-28]
	and	r3, r3, #1048576
	cmp	r3, #0
	beq	L449
	ldr	r0, [fp, #-28]
	ldr	r1, L476+304
	bl	_Z5fieldjj
	mov	ip, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+300
	mov	r2, ip
	ldr	r3, [fp, #-1288]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L449:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+304
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	str	r1, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+308
	mov	r2, r3
	ldr	r3, [fp, #-1288]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L430:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+312
	ldr	r2, L476+324
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L452
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+316
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L452:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+320
	ldr	r2, L476+324
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L454
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L476+328
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L454:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+332
	ldr	r2, L476+344
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L456
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L476+336
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L456:
	ldr	r0, [fp, #-28]
	ldr	r1, L476+340
	ldr	r2, L476+344
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L458
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	mov	r0, r3
	ldr	r1, L478
	ldr	r2, [fp, #-1188]
	ldr	r3, [fp, #-1192]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L458:
	ldr	r0, [fp, #-28]
	ldr	r1, L478+4
	ldr	r2, L478+8
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L460
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	ldr	r3, [fp, #-1200]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L478+12
	ldr	r2, [fp, #-1192]
	ldr	r3, [fp, #-1188]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L460:
	ldr	r0, [fp, #-28]
	ldr	r1, L478+16
	ldr	r2, L478+20
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L462
	ldr	r3, [fp, #-28]
	and	r2, r3, #15
	ldr	r3, [fp, #-28]
	and	r3, r3, #3840
	mov	r3, r3, lsr #4
	orr	r3, r2, r3
	str	r3, [fp, #-1288]
	ldr	r3, [fp, #-28]
	and	r3, r3, #8388608
	cmp	r3, #0
	beq	L463
	ldr	r3, L478+24
	mov	r2, #43
	sub	r0, fp, #20
	strb	r2, [r0, r3]
	b	L464
L463:
	ldr	r3, L478+24
	mov	r2, #45
	sub	r1, fp, #20
	strb	r2, [r1, r3]
L464:
	ldr	r0, [fp, #-28]
	ldr	r1, L478+16
	ldr	r2, L478+28
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L465
	sub	r2, fp, #1312
	sub	r2, r2, #4
	sub	r2, r2, #4
	ldr	r3, L478+24
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L478+32
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L466
L465:
	ldr	r0, [fp, #-28]
	ldr	r1, L478+36
	ldr	r2, L478+28
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L467
	sub	r2, fp, #1312
	sub	r2, r2, #4
	sub	r2, r2, #4
	ldr	r3, L478+24
	sub	r1, fp, #20
	ldrb	ip, [r1, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L478+40
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L466
L467:
	ldr	r0, [fp, #-28]
	ldr	r1, L478+44
	ldr	r2, L478+28
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L469
	sub	r2, fp, #1312
	sub	r2, r2, #4
	sub	r2, r2, #4
	ldr	r3, L478+24
	sub	r0, fp, #20
	ldrb	ip, [r0, r3]	@ zero_extendqisi2
	ldr	r3, [fp, #-1288]
	str	r3, [sp, #0]
	mov	r0, r2
	ldr	r1, L478+48
	ldr	r2, [fp, #-1188]
	mov	r3, ip
	bl	sprintf
	b	L466
L469:
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r3
	ldr	r1, L478+52
	bl	sprintf
L466:
	ldr	r2, [fp, #-28]
	ldr	r3, L478+56
	and	r3, r2, r3
	cmp	r3, #0
	beq	L471
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r2
	ldr	r1, L478+60
	ldr	r2, [fp, #-1192]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L471:
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r2, r2, r3
	sub	r3, fp, #1312
	sub	r3, r3, #4
	sub	r3, r3, #4
	mov	r0, r2
	ldr	r1, L478+64
	mov	r2, r3
	ldr	r3, [fp, #-1192]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L462:
	ldr	r0, [fp, #-28]
	mov	r1, #144
	ldr	r2, L478+68
	bl	_Z5matchjjj
	mov	r3, r0
	cmp	r3, #0
	beq	L474
	ldr	r0, [fp, #-28]
	mov	r1, #983040
	bl	_Z5fieldjj
	mov	r4, r0
	ldr	r0, [fp, #-28]
	mov	r1, #3840
	bl	_Z5fieldjj
	mov	r5, r0
	ldr	r0, [fp, #-28]
	mov	r1, #15
	bl	_Z5fieldjj
	mov	r1, r0
	sub	r2, fp, #1024
	sub	r2, r2, #8
	ldr	r3, [fp, #-1036]
	add	r3, r2, r3
	str	r1, [sp, #0]
	mov	r0, r3
	ldr	r1, L478+72
	mov	r2, r4
	mov	r3, r5
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
	b	L323
L474:
	sub	r3, fp, #1024
	sub	r3, r3, #8
	mov	r0, r3
	ldr	r1, L478+76
	ldr	r2, [fp, #-28]
	bl	sprintf
	mov	r2, r0
	ldr	r3, [fp, #-1036]
	add	r3, r3, r2
	str	r3, [fp, #-1036]
L323:
	ldr	r2, L478+80
	ldr	r3, [fp, #-1036]
	sub	r1, fp, #20
	add	r3, r1, r3
	add	r2, r3, r2
	mov	r3, #0
	strb	r3, [r2, #0]
	sub	r3, fp, #1024
	sub	r3, r3, #8
	ldr	r0, [fp, #-24]
	ldr	r1, L478+84
	mov	r2, r3
	bl	sprintf
	ldmea	fp, {r4, r5, fp, sp, pc}
L479:
	.align	0
L478:
	.word	LC161
	.word	26214608
	.word	267390960
	.word	LC162
	.word	4194512
	.word	239075568
	.word	-1193
	.word	241172720
	.word	LC163
	.word	20971728
	.word	LC164
	.word	23068880
	.word	LC165
	.word	LC166
	.word	100000
	.word	LC167
	.word	LC168
	.word	267448560
	.word	LC169
	.word	LC26
	.word	-1012
	.word	LC107
	.section .rdata
	.align	0
LC170:
	.ascii	"   \"\000"
	.align	0
LC171:
	.ascii	".\000"
	.align	0
LC172:
	.ascii	"\"\000"
	.text
	.align	0
	.global	_Z10printasciiPvj
_Z10printasciiPvj:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #16
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	ldr	r0, [fp, #-16]
	ldr	r1, L487
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-24]
L481:
	ldr	r3, [fp, #-24]
	cmp	r3, #3
	ble	L484
	b	L482
L484:
	ldr	r3, [fp, #-24]
	mov	r2, r3, asl #3
	ldr	r3, [fp, #-20]
	mov	r3, r3, lsr r2
	strb	r3, [fp, #-25]
	ldrb	r3, [fp, #-25]	@ zero_extendqisi2
	cmp	r3, #31
	bls	L485
	ldrb	r3, [fp, #-25]	@ zero_extendqisi2
	cmp	r3, #126
	bhi	L485
	ldrb	r3, [fp, #-25]	@ zero_extendqisi2
	ldr	r0, [fp, #-16]
	ldr	r1, L487+4
	mov	r2, r3
	bl	fprintf
	b	L483
L485:
	ldr	r0, [fp, #-16]
	ldr	r1, L487+8
	bl	fprintf
L483:
	ldr	r3, [fp, #-24]
	add	r3, r3, #1
	str	r3, [fp, #-24]
	b	L481
L482:
	ldr	r0, [fp, #-16]
	ldr	r1, L487+12
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L488:
	.align	0
L487:
	.word	LC170
	.word	LC51
	.word	LC171
	.word	LC172
	.section .rdata
	.align	0
LC173:
	.ascii	"%s,\000"
	.align	0
LC174:
	.ascii	"%X: \000"
	.align	0
LC175:
	.ascii	"%08X %8X \000"
	.align	0
LC176:
	.ascii	" \t %% %X\000"
	.align	0
LC177:
	.ascii	"\n\000"
	.text
	.align	0
	.global	_Z8dumpcodePvPcS_S_
_Z8dumpcodePvPcS_S_:
	@ args = 0, pretend = 0, frame = 320
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #320
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r3, L500
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L490
	ldr	r3, [fp, #-20]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #0
	beq	L490
	ldr	r0, [fp, #-16]
	ldr	r1, L500+4
	ldr	r2, [fp, #-20]
	bl	fprintf
L490:
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-32]
L492:
	ldr	r2, [fp, #-32]
	ldr	r3, [fp, #-28]
	cmp	r2, r3
	bcc	L495
	b	L493
L495:
	ldr	r3, L500
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L496
	ldr	r0, [fp, #-16]
	ldr	r1, L500+8
	ldr	r2, [fp, #-32]
	bl	fprintf
	b	L497
L496:
	ldr	r3, [fp, #-32]
	ldr	r0, [fp, #-16]
	ldr	r1, L500+12
	ldr	r2, [r3, #0]
	ldr	r3, [fp, #-32]
	bl	fprintf
L497:
	sub	r3, fp, #332
	ldr	r2, [fp, #-32]
	mov	r0, r3
	ldr	r1, [r2, #0]
	ldr	r2, [fp, #-32]
	bl	_Z8printasmPcjj
	sub	r3, fp, #332
	ldr	r0, [fp, #-16]
	ldr	r1, L500+16
	mov	r2, r3
	bl	fprintf
	ldr	r3, L500
	ldr	r3, [r3, #0]
	cmp	r3, #0
	bne	L498
	ldr	r3, [fp, #-32]
	ldr	r0, [fp, #-16]
	ldr	r1, [r3, #0]
	bl	_Z10printasciiPvj
L498:
	ldr	r3, L500
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L499
	ldr	r3, [fp, #-32]
	ldr	r0, [fp, #-16]
	ldr	r1, L500+20
	ldr	r2, [r3, #0]
	bl	fprintf
L499:
	ldr	r0, [fp, #-16]
	ldr	r1, L500+24
	bl	fprintf
	ldr	r3, [fp, #-32]
	add	r3, r3, #4
	str	r3, [fp, #-32]
	b	L492
L493:
	ldr	r0, [fp, #-16]
	ldr	r1, L500+24
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L501:
	.align	0
L500:
	.word	dasm
	.word	LC173
	.word	LC174
	.word	LC175
	.word	LC107
	.word	LC176
	.word	LC177
	.section .rdata
	.align	0
LC178:
	.ascii	"\"\n\n\000"
	.text
	.align	0
	.global	_Z10dumpstringPvPcS_S_
_Z10dumpstringPvPcS_S_:
	@ args = 0, pretend = 0, frame = 20
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #20
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r3, L511
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L503
	ldr	r0, [fp, #-16]
	ldr	r1, L511+4
	ldr	r2, [fp, #-20]
	bl	fprintf
L503:
	ldr	r3, L511
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	L504
	ldr	r0, [fp, #-16]
	ldr	r1, L511+8
	ldr	r2, [fp, #-24]
	bl	fprintf
	b	L505
L504:
	ldr	r3, [fp, #-32]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	ldr	r0, [fp, #-16]
	ldr	r1, L511+12
	mov	r2, r3
	ldr	r3, [fp, #-32]
	bl	fprintf
L505:
	ldr	r0, [fp, #-16]
	ldr	r1, L511+16
	bl	fprintf
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-32]
L506:
	ldr	r2, [fp, #-32]
	ldr	r3, [fp, #-28]
	cmp	r2, r3
	bcc	L509
	b	L507
L509:
	ldr	r3, [fp, #-32]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #31
	bls	L508
	ldr	r3, [fp, #-32]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	cmp	r3, #126
	bhi	L508
	ldr	r3, [fp, #-32]
	ldrb	r3, [r3, #0]	@ zero_extendqisi2
	ldr	r0, [fp, #-16]
	ldr	r1, L511+20
	mov	r2, r3
	bl	fprintf
L508:
	ldr	r3, [fp, #-32]
	add	r3, r3, #1
	str	r3, [fp, #-32]
	b	L506
L507:
	ldr	r0, [fp, #-16]
	ldr	r1, L511+24
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L512:
	.align	0
L511:
	.word	dasm
	.word	LC173
	.word	LC174
	.word	LC175
	.word	LC172
	.word	LC51
	.word	LC178
	.section .rdata
	.align	0
LC179:
	.ascii	"%s,%X: \000"
	.align	0
LC180:
	.ascii	"%08X\n\000"
	.text
	.align	0
	.global	_Z8dumpdataPvPcS_S_
_Z8dumpdataPvPcS_S_:
	@ args = 0, pretend = 0, frame = 20
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #20
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r0, [fp, #-16]
	ldr	r1, L518
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-24]
	bl	fprintf
	ldr	r3, [fp, #-24]
	str	r3, [fp, #-32]
L514:
	ldr	r2, [fp, #-32]
	ldr	r3, [fp, #-28]
	cmp	r2, r3
	bcc	L517
	b	L515
L517:
	ldr	r3, [fp, #-32]
	ldr	r0, [fp, #-16]
	ldr	r1, L518+4
	ldr	r2, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-32]
	add	r3, r3, #4
	str	r3, [fp, #-32]
	b	L514
L515:
	ldr	r0, [fp, #-16]
	ldr	r1, L518+8
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L519:
	.align	0
L518:
	.word	LC179
	.word	LC180
	.word	LC177
	.align	0
	.global	_Z12dumpdatasizePvPcS_i
_Z12dumpdatasizePvPcS_i:
	@ args = 0, pretend = 0, frame = 20
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #20
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	str	r3, [fp, #-28]
	ldr	r0, [fp, #-16]
	ldr	r1, L525
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-24]
	bl	fprintf
	mov	r3, #0
	str	r3, [fp, #-32]
L521:
	ldr	r3, [fp, #-28]
	add	r2, r3, #3
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r2, r3, asr #2
	ldr	r3, [fp, #-32]
	cmp	r3, r2
	blt	L524
	b	L522
L524:
	ldr	r3, [fp, #-32]
	mov	r2, r3, asl #2
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	ldr	r0, [fp, #-16]
	ldr	r1, L525+4
	ldr	r2, [r3, #0]
	bl	fprintf
	ldr	r3, [fp, #-32]
	add	r3, r3, #1
	str	r3, [fp, #-32]
	b	L521
L522:
	ldr	r0, [fp, #-16]
	ldr	r1, L525+8
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L526:
	.align	0
L525:
	.word	LC179
	.word	LC180
	.word	LC177
	.section .rdata
	.align	0
LC181:
	.ascii	"%s: RS %X\n\000"
	.text
	.align	0
	.global	_Z7dumpvarPvPci
_Z7dumpvarPvPci:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #16
	str	r0, [fp, #-16]
	str	r1, [fp, #-20]
	str	r2, [fp, #-24]
	ldr	r3, [fp, #-24]
	add	r2, r3, #3
	mov	r3, r2, asr #31
	mov	r3, r3, lsr #30
	add	r3, r2, r3
	mov	r3, r3, asr #2
	mov	r3, r3, asl #2
	str	r3, [fp, #-28]
	ldr	r0, [fp, #-16]
	ldr	r1, L528
	ldr	r2, [fp, #-20]
	ldr	r3, [fp, #-28]
	bl	fprintf
	ldmea	fp, {fp, sp, pc}
L529:
	.align	0
L528:
	.word	LC181
